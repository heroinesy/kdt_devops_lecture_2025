{
    "kind": "NodeList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "514"
    },
    "items": [
        {
            "metadata": {
                "name": "lab-cluster-control-plane",
                "uid": "13198dd4-40a3-4433-ab80-7fc2fabcf1d6",
                "resourceVersion": "422",
                "creationTimestamp": "2025-10-03T07:54:05Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "lab-cluster-control-plane",
                    "kubernetes.io/os": "linux",
                    "node-role.kubernetes.io/control-plane": "",
                    "node-type": "control-plane",
                    "node.kubernetes.io/exclude-from-external-load-balancers": ""
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "unix:///run/containerd/containerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.0.0/24",
                "podCIDRs": [
                    "10.244.0.0/24"
                ],
                "providerID": "kind://docker/lab-cluster/lab-cluster-control-plane",
                "taints": [
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    }
                ]
            },
            "status": {
                "capacity": {
                    "cpu": "24",
                    "ephemeral-storage": "1055762868Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "32825520Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "24",
                    "ephemeral-storage": "1055762868Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "32825520Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-10-03T07:54:25Z",
                        "lastTransitionTime": "2025-10-03T07:54:05Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-10-03T07:54:25Z",
                        "lastTransitionTime": "2025-10-03T07:54:05Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-10-03T07:54:25Z",
                        "lastTransitionTime": "2025-10-03T07:54:05Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2025-10-03T07:54:25Z",
                        "lastTransitionTime": "2025-10-03T07:54:25Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.26.0.5"
                    },
                    {
                        "type": "Hostname",
                        "address": "lab-cluster-control-plane"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "d95b5a3a29734c758ee179a7f2c085e7",
                    "systemUUID": "d95b5a3a29734c758ee179a7f2c085e7",
                    "bootID": "cbfb4d21-2004-4f2f-ad5d-104d63c6c4db",
                    "kernelVersion": "6.6.87.1-microsoft-standard-WSL2",
                    "osImage": "Debian GNU/Linux 11 (bullseye)",
                    "containerRuntimeVersion": "containerd://1.7.1",
                    "kubeletVersion": "v1.27.3",
                    "kubeProxyVersion": "v1.27.3",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "registry.k8s.io/etcd:3.5.7-0"
                        ],
                        "sizeBytes": 101639218
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:0202953c0b15043ca535e81d97f7062240ae66ea044b24378370d6e577782762",
                            "registry.k8s.io/kube-apiserver:v1.27.3"
                        ],
                        "sizeBytes": 83456511
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:bdbeb95d8a0820cbc385e44f75ed25799ac8961e952ded26aa2a09b3377dfee7",
                            "registry.k8s.io/kube-controller-manager:v1.27.3"
                        ],
                        "sizeBytes": 74420365
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:ce2145a147b3f1fc440ba15eaa91b879ba9cbf929c8dd8f3190868f4373f2183",
                            "registry.k8s.io/kube-proxy:v1.27.3"
                        ],
                        "sizeBytes": 72711677
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:9d6f903c0d4bf3b145c7bbc68727251ca1abf98aed7f8d2acb9f6a10ac81e8c2",
                            "registry.k8s.io/kube-scheduler:v1.27.3"
                        ],
                        "sizeBytes": 59801741
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:v20230511-dc714da8"
                        ],
                        "sizeBytes": 27731571
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-provisioner:v20230511-dc714da8"
                        ],
                        "sizeBytes": 19351145
                    },
                    {
                        "names": [
                            "registry.k8s.io/coredns/coredns:v1.10.1"
                        ],
                        "sizeBytes": 16190758
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-helper:v20230510-486859a6"
                        ],
                        "sizeBytes": 3052318
                    },
                    {
                        "names": [
                            "registry.k8s.io/pause:3.7"
                        ],
                        "sizeBytes": 311278
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "lab-cluster-worker",
                "uid": "9c6c5b37-3f6b-4220-a2d6-3f3b7abde6df",
                "resourceVersion": "502",
                "creationTimestamp": "2025-10-03T07:54:25Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "lab-cluster-worker",
                    "kubernetes.io/os": "linux",
                    "node-type": "worker"
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "unix:///run/containerd/containerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.1.0/24",
                "podCIDRs": [
                    "10.244.1.0/24"
                ],
                "providerID": "kind://docker/lab-cluster/lab-cluster-worker"
            },
            "status": {
                "capacity": {
                    "cpu": "24",
                    "ephemeral-storage": "1055762868Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "32825520Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "24",
                    "ephemeral-storage": "1055762868Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "32825520Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-10-03T07:54:28Z",
                        "lastTransitionTime": "2025-10-03T07:54:25Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-10-03T07:54:28Z",
                        "lastTransitionTime": "2025-10-03T07:54:25Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-10-03T07:54:28Z",
                        "lastTransitionTime": "2025-10-03T07:54:25Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastHeartbeatTime": "2025-10-03T07:54:28Z",
                        "lastTransitionTime": "2025-10-03T07:54:28Z",
                        "reason": "KubeletReady",
                        "message": "kubelet is posting ready status"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.26.0.6"
                    },
                    {
                        "type": "Hostname",
                        "address": "lab-cluster-worker"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "2ba3db207d2a4ccf9a2bd3f436a5b807",
                    "systemUUID": "2ba3db207d2a4ccf9a2bd3f436a5b807",
                    "bootID": "cbfb4d21-2004-4f2f-ad5d-104d63c6c4db",
                    "kernelVersion": "6.6.87.1-microsoft-standard-WSL2",
                    "osImage": "Debian GNU/Linux 11 (bullseye)",
                    "containerRuntimeVersion": "containerd://1.7.1",
                    "kubeletVersion": "v1.27.3",
                    "kubeProxyVersion": "v1.27.3",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "registry.k8s.io/etcd:3.5.7-0"
                        ],
                        "sizeBytes": 101639218
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:0202953c0b15043ca535e81d97f7062240ae66ea044b24378370d6e577782762",
                            "registry.k8s.io/kube-apiserver:v1.27.3"
                        ],
                        "sizeBytes": 83456511
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:bdbeb95d8a0820cbc385e44f75ed25799ac8961e952ded26aa2a09b3377dfee7",
                            "registry.k8s.io/kube-controller-manager:v1.27.3"
                        ],
                        "sizeBytes": 74420365
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:ce2145a147b3f1fc440ba15eaa91b879ba9cbf929c8dd8f3190868f4373f2183",
                            "registry.k8s.io/kube-proxy:v1.27.3"
                        ],
                        "sizeBytes": 72711677
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:9d6f903c0d4bf3b145c7bbc68727251ca1abf98aed7f8d2acb9f6a10ac81e8c2",
                            "registry.k8s.io/kube-scheduler:v1.27.3"
                        ],
                        "sizeBytes": 59801741
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:v20230511-dc714da8"
                        ],
                        "sizeBytes": 27731571
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-provisioner:v20230511-dc714da8"
                        ],
                        "sizeBytes": 19351145
                    },
                    {
                        "names": [
                            "registry.k8s.io/coredns/coredns:v1.10.1"
                        ],
                        "sizeBytes": 16190758
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-helper:v20230510-486859a6"
                        ],
                        "sizeBytes": 3052318
                    },
                    {
                        "names": [
                            "registry.k8s.io/pause:3.7"
                        ],
                        "sizeBytes": 311278
                    }
                ]
            }
        },
        {
            "metadata": {
                "name": "lab-cluster-worker2",
                "uid": "684db2a0-bcd1-4729-b254-d3add4d10efe",
                "resourceVersion": "510",
                "creationTimestamp": "2025-10-03T07:54:27Z",
                "labels": {
                    "beta.kubernetes.io/arch": "amd64",
                    "beta.kubernetes.io/os": "linux",
                    "kubernetes.io/arch": "amd64",
                    "kubernetes.io/hostname": "lab-cluster-worker2",
                    "kubernetes.io/os": "linux",
                    "node-type": "worker"
                },
                "annotations": {
                    "kubeadm.alpha.kubernetes.io/cri-socket": "unix:///run/containerd/containerd.sock",
                    "node.alpha.kubernetes.io/ttl": "0",
                    "volumes.kubernetes.io/controller-managed-attach-detach": "true"
                }
            },
            "spec": {
                "podCIDR": "10.244.2.0/24",
                "podCIDRs": [
                    "10.244.2.0/24"
                ],
                "providerID": "kind://docker/lab-cluster/lab-cluster-worker2",
                "taints": [
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "effect": "NoSchedule"
                    }
                ]
            },
            "status": {
                "capacity": {
                    "cpu": "24",
                    "ephemeral-storage": "1055762868Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "32825520Ki",
                    "pods": "110"
                },
                "allocatable": {
                    "cpu": "24",
                    "ephemeral-storage": "1055762868Ki",
                    "hugepages-1Gi": "0",
                    "hugepages-2Mi": "0",
                    "memory": "32825520Ki",
                    "pods": "110"
                },
                "conditions": [
                    {
                        "type": "MemoryPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-10-03T07:54:29Z",
                        "lastTransitionTime": "2025-10-03T07:54:27Z",
                        "reason": "KubeletHasSufficientMemory",
                        "message": "kubelet has sufficient memory available"
                    },
                    {
                        "type": "DiskPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-10-03T07:54:29Z",
                        "lastTransitionTime": "2025-10-03T07:54:27Z",
                        "reason": "KubeletHasNoDiskPressure",
                        "message": "kubelet has no disk pressure"
                    },
                    {
                        "type": "PIDPressure",
                        "status": "False",
                        "lastHeartbeatTime": "2025-10-03T07:54:29Z",
                        "lastTransitionTime": "2025-10-03T07:54:27Z",
                        "reason": "KubeletHasSufficientPID",
                        "message": "kubelet has sufficient PID available"
                    },
                    {
                        "type": "Ready",
                        "status": "False",
                        "lastHeartbeatTime": "2025-10-03T07:54:29Z",
                        "lastTransitionTime": "2025-10-03T07:54:27Z",
                        "reason": "KubeletNotReady",
                        "message": "container runtime network not ready: NetworkReady=false reason:NetworkPluginNotReady message:Network plugin returns error: cni plugin not initialized"
                    }
                ],
                "addresses": [
                    {
                        "type": "InternalIP",
                        "address": "172.26.0.7"
                    },
                    {
                        "type": "Hostname",
                        "address": "lab-cluster-worker2"
                    }
                ],
                "daemonEndpoints": {
                    "kubeletEndpoint": {
                        "Port": 10250
                    }
                },
                "nodeInfo": {
                    "machineID": "f9365e399813426e8929ba010eeb604e",
                    "systemUUID": "f9365e399813426e8929ba010eeb604e",
                    "bootID": "cbfb4d21-2004-4f2f-ad5d-104d63c6c4db",
                    "kernelVersion": "6.6.87.1-microsoft-standard-WSL2",
                    "osImage": "Debian GNU/Linux 11 (bullseye)",
                    "containerRuntimeVersion": "containerd://1.7.1",
                    "kubeletVersion": "v1.27.3",
                    "kubeProxyVersion": "v1.27.3",
                    "operatingSystem": "linux",
                    "architecture": "amd64"
                },
                "images": [
                    {
                        "names": [
                            "registry.k8s.io/etcd:3.5.7-0"
                        ],
                        "sizeBytes": 101639218
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:0202953c0b15043ca535e81d97f7062240ae66ea044b24378370d6e577782762",
                            "registry.k8s.io/kube-apiserver:v1.27.3"
                        ],
                        "sizeBytes": 83456511
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:bdbeb95d8a0820cbc385e44f75ed25799ac8961e952ded26aa2a09b3377dfee7",
                            "registry.k8s.io/kube-controller-manager:v1.27.3"
                        ],
                        "sizeBytes": 74420365
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:ce2145a147b3f1fc440ba15eaa91b879ba9cbf929c8dd8f3190868f4373f2183",
                            "registry.k8s.io/kube-proxy:v1.27.3"
                        ],
                        "sizeBytes": 72711677
                    },
                    {
                        "names": [
                            "docker.io/library/import-2023-06-15@sha256:9d6f903c0d4bf3b145c7bbc68727251ca1abf98aed7f8d2acb9f6a10ac81e8c2",
                            "registry.k8s.io/kube-scheduler:v1.27.3"
                        ],
                        "sizeBytes": 59801741
                    },
                    {
                        "names": [
                            "docker.io/kindest/kindnetd:v20230511-dc714da8"
                        ],
                        "sizeBytes": 27731571
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-provisioner:v20230511-dc714da8"
                        ],
                        "sizeBytes": 19351145
                    },
                    {
                        "names": [
                            "registry.k8s.io/coredns/coredns:v1.10.1"
                        ],
                        "sizeBytes": 16190758
                    },
                    {
                        "names": [
                            "docker.io/kindest/local-path-helper:v20230510-486859a6"
                        ],
                        "sizeBytes": 3052318
                    },
                    {
                        "names": [
                            "registry.k8s.io/pause:3.7"
                        ],
                        "sizeBytes": 311278
                    }
                ]
            }
        }
    ]
}
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "514"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-5d78c9869d-f6qvq.186aebfa007175ac",
                "namespace": "kube-system",
                "uid": "a9f87a69-a842-4024-a6fc-8ecec7f835e6",
                "resourceVersion": "376",
                "creationTimestamp": "2025-10-03T07:54:23Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d-f6qvq",
                "uid": "b495eea5-7b95-4fa8-b5d4-b23fef774f89",
                "apiVersion": "v1",
                "resourceVersion": "369"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling..",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2025-10-03T07:54:23Z",
            "lastTimestamp": "2025-10-03T07:54:23Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d-f6qvq.186aebfa8f0f11dc",
                "namespace": "kube-system",
                "uid": "c25044ea-7128-42e0-949e-d0e05ab1f36d",
                "resourceVersion": "429",
                "creationTimestamp": "2025-10-03T07:54:25Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d-f6qvq",
                "uid": "b495eea5-7b95-4fa8-b5d4-b23fef774f89",
                "apiVersion": "v1",
                "resourceVersion": "377"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/coredns-5d78c9869d-f6qvq to lab-cluster-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2025-10-03T07:54:25Z",
            "lastTimestamp": "2025-10-03T07:54:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d-f6qvq.186aebfaaea2a434",
                "namespace": "kube-system",
                "uid": "ed156473-c7bf-46b9-bae6-ef74617821b1",
                "resourceVersion": "439",
                "creationTimestamp": "2025-10-03T07:54:26Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d-f6qvq",
                "uid": "b495eea5-7b95-4fa8-b5d4-b23fef774f89",
                "apiVersion": "v1",
                "resourceVersion": "425",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/coredns/coredns:v1.10.1\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-03T07:54:26Z",
            "lastTimestamp": "2025-10-03T07:54:26Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d-f6qvq.186aebfac7227e42",
                "namespace": "kube-system",
                "uid": "65e4002d-1269-4c76-aa10-e0f15926e90f",
                "resourceVersion": "442",
                "creationTimestamp": "2025-10-03T07:54:26Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d-f6qvq",
                "uid": "b495eea5-7b95-4fa8-b5d4-b23fef774f89",
                "apiVersion": "v1",
                "resourceVersion": "425",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Created",
            "message": "Created container coredns",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-03T07:54:26Z",
            "lastTimestamp": "2025-10-03T07:54:26Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d-f6qvq.186aebfacd33b777",
                "namespace": "kube-system",
                "uid": "b79d78c4-a3b5-4415-a847-8ea760028bf8",
                "resourceVersion": "445",
                "creationTimestamp": "2025-10-03T07:54:26Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d-f6qvq",
                "uid": "b495eea5-7b95-4fa8-b5d4-b23fef774f89",
                "apiVersion": "v1",
                "resourceVersion": "425",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Started",
            "message": "Started container coredns",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-03T07:54:26Z",
            "lastTimestamp": "2025-10-03T07:54:26Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d-nt47d.186aebf9ffebd127",
                "namespace": "kube-system",
                "uid": "c3a6ae9b-050e-467d-97a1-a1449a3f9e06",
                "resourceVersion": "368",
                "creationTimestamp": "2025-10-03T07:54:23Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d-nt47d",
                "uid": "f10fd06a-27b1-4e19-9088-60f33512c544",
                "apiVersion": "v1",
                "resourceVersion": "365"
            },
            "reason": "FailedScheduling",
            "message": "0/1 nodes are available: 1 node(s) had untolerated taint {node.kubernetes.io/not-ready: }. preemption: 0/1 nodes are available: 1 Preemption is not helpful for scheduling..",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2025-10-03T07:54:23Z",
            "lastTimestamp": "2025-10-03T07:54:23Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d-nt47d.186aebfa8ef648ba",
                "namespace": "kube-system",
                "uid": "f893ac66-37d5-4094-bee8-e1c3050c19f7",
                "resourceVersion": "426",
                "creationTimestamp": "2025-10-03T07:54:25Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d-nt47d",
                "uid": "f10fd06a-27b1-4e19-9088-60f33512c544",
                "apiVersion": "v1",
                "resourceVersion": "372"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/coredns-5d78c9869d-nt47d to lab-cluster-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2025-10-03T07:54:25Z",
            "lastTimestamp": "2025-10-03T07:54:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d-nt47d.186aebfaae31878f",
                "namespace": "kube-system",
                "uid": "a834e793-9df9-4562-8095-ade782d27ade",
                "resourceVersion": "438",
                "creationTimestamp": "2025-10-03T07:54:26Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d-nt47d",
                "uid": "f10fd06a-27b1-4e19-9088-60f33512c544",
                "apiVersion": "v1",
                "resourceVersion": "423",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/coredns/coredns:v1.10.1\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-03T07:54:26Z",
            "lastTimestamp": "2025-10-03T07:54:26Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d-nt47d.186aebfac4cd8cf0",
                "namespace": "kube-system",
                "uid": "d52031f0-b030-49b7-879f-aa73209ab081",
                "resourceVersion": "441",
                "creationTimestamp": "2025-10-03T07:54:26Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d-nt47d",
                "uid": "f10fd06a-27b1-4e19-9088-60f33512c544",
                "apiVersion": "v1",
                "resourceVersion": "423",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Created",
            "message": "Created container coredns",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-03T07:54:26Z",
            "lastTimestamp": "2025-10-03T07:54:26Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d-nt47d.186aebfacc3d7432",
                "namespace": "kube-system",
                "uid": "733d83c4-b2db-44a7-9e05-0fc6dd7d021c",
                "resourceVersion": "444",
                "creationTimestamp": "2025-10-03T07:54:26Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d-nt47d",
                "uid": "f10fd06a-27b1-4e19-9088-60f33512c544",
                "apiVersion": "v1",
                "resourceVersion": "423",
                "fieldPath": "spec.containers{coredns}"
            },
            "reason": "Started",
            "message": "Started container coredns",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-03T07:54:26Z",
            "lastTimestamp": "2025-10-03T07:54:26Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d.186aebf9ffe6e615",
                "namespace": "kube-system",
                "uid": "2dce6ba3-2969-4283-81dc-69e64b653b01",
                "resourceVersion": "367",
                "creationTimestamp": "2025-10-03T07:54:23Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d",
                "uid": "40e73bbd-ee69-4db0-a300-f8f39d087795",
                "apiVersion": "apps/v1",
                "resourceVersion": "340"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-5d78c9869d-nt47d",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2025-10-03T07:54:23Z",
            "lastTimestamp": "2025-10-03T07:54:23Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d.186aebfa00321f67",
                "namespace": "kube-system",
                "uid": "6b2cfbbf-b301-4682-9ae7-83b52b31dc5d",
                "resourceVersion": "374",
                "creationTimestamp": "2025-10-03T07:54:23Z"
            },
            "involvedObject": {
                "kind": "ReplicaSet",
                "namespace": "kube-system",
                "name": "coredns-5d78c9869d",
                "uid": "40e73bbd-ee69-4db0-a300-f8f39d087795",
                "apiVersion": "apps/v1",
                "resourceVersion": "340"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: coredns-5d78c9869d-f6qvq",
            "source": {
                "component": "replicaset-controller"
            },
            "firstTimestamp": "2025-10-03T07:54:23Z",
            "lastTimestamp": "2025-10-03T07:54:23Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "coredns.186aebf9e2428e3a",
                "namespace": "kube-system",
                "uid": "2c4b91ee-e1df-4aa6-95a1-1bcb823b0b92",
                "resourceVersion": "342",
                "creationTimestamp": "2025-10-03T07:54:22Z"
            },
            "involvedObject": {
                "kind": "Deployment",
                "namespace": "kube-system",
                "name": "coredns",
                "uid": "289f1a4a-36f8-41d4-9f12-4ec4f1baf9e1",
                "apiVersion": "apps/v1",
                "resourceVersion": "221"
            },
            "reason": "ScalingReplicaSet",
            "message": "Scaled up replica set coredns-5d78c9869d to 2",
            "source": {
                "component": "deployment-controller"
            },
            "firstTimestamp": "2025-10-03T07:54:22Z",
            "lastTimestamp": "2025-10-03T07:54:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-24bgg.186aebfaf773a501",
                "namespace": "kube-system",
                "uid": "5ddd9f64-4d78-4be7-88e8-f2311b1f10de",
                "resourceVersion": "487",
                "creationTimestamp": "2025-10-03T07:54:27Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-24bgg",
                "uid": "5148e856-68de-405b-9c3d-76287f0bbdbc",
                "apiVersion": "v1",
                "resourceVersion": "476"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kindnet-24bgg to lab-cluster-worker2",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2025-10-03T07:54:27Z",
            "lastTimestamp": "2025-10-03T07:54:27Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-2tkf7.186aebf9dd182892",
                "namespace": "kube-system",
                "uid": "f93d48e8-edf7-4610-9be6-9c7936262ac7",
                "resourceVersion": "336",
                "creationTimestamp": "2025-10-03T07:54:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-2tkf7",
                "uid": "d0388c9a-2e29-4f5b-a8f1-3f87009649e7",
                "apiVersion": "v1",
                "resourceVersion": "327"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kindnet-2tkf7 to lab-cluster-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2025-10-03T07:54:22Z",
            "lastTimestamp": "2025-10-03T07:54:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-2tkf7.186aebf9e500d78d",
                "namespace": "kube-system",
                "uid": "b9920309-01c3-4fb3-ab0b-ca87f75ae24a",
                "resourceVersion": "349",
                "creationTimestamp": "2025-10-03T07:54:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-2tkf7",
                "uid": "d0388c9a-2e29-4f5b-a8f1-3f87009649e7",
                "apiVersion": "v1",
                "resourceVersion": "330"
            },
            "reason": "FailedMount",
            "message": "MountVolume.SetUp failed for volume \"kube-api-access-zdvkv\" : configmap \"kube-root-ca.crt\" not found",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-03T07:54:22Z",
            "lastTimestamp": "2025-10-03T07:54:22Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-2tkf7.186aebfa26b0eb42",
                "namespace": "kube-system",
                "uid": "6b8c8c04-b8ff-4dc7-b3d3-f52e29c20e27",
                "resourceVersion": "388",
                "creationTimestamp": "2025-10-03T07:54:24Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-2tkf7",
                "uid": "d0388c9a-2e29-4f5b-a8f1-3f87009649e7",
                "apiVersion": "v1",
                "resourceVersion": "330",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Pulled",
            "message": "Container image \"docker.io/kindest/kindnetd:v20230511-dc714da8\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-03T07:54:24Z",
            "lastTimestamp": "2025-10-03T07:54:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-2tkf7.186aebfa509b0f39",
                "namespace": "kube-system",
                "uid": "77bb8460-54f1-40ef-9eed-2bb569bbfdd0",
                "resourceVersion": "392",
                "creationTimestamp": "2025-10-03T07:54:24Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-2tkf7",
                "uid": "d0388c9a-2e29-4f5b-a8f1-3f87009649e7",
                "apiVersion": "v1",
                "resourceVersion": "330",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Created",
            "message": "Created container kindnet-cni",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-03T07:54:24Z",
            "lastTimestamp": "2025-10-03T07:54:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-2tkf7.186aebfa6e967417",
                "namespace": "kube-system",
                "uid": "f8d4c066-004d-4dee-8993-8d546d8f72a7",
                "resourceVersion": "402",
                "creationTimestamp": "2025-10-03T07:54:25Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-2tkf7",
                "uid": "d0388c9a-2e29-4f5b-a8f1-3f87009649e7",
                "apiVersion": "v1",
                "resourceVersion": "330",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Started",
            "message": "Started container kindnet-cni",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-03T07:54:25Z",
            "lastTimestamp": "2025-10-03T07:54:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-pb8dl.186aebfa6fc39744",
                "namespace": "kube-system",
                "uid": "2dec7164-dc73-48dd-ad61-bddd197d53a9",
                "resourceVersion": "414",
                "creationTimestamp": "2025-10-03T07:54:25Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-pb8dl",
                "uid": "9d2a117c-64ab-4d46-b30a-4988d1e17666",
                "apiVersion": "v1",
                "resourceVersion": "404"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kindnet-pb8dl to lab-cluster-worker",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2025-10-03T07:54:25Z",
            "lastTimestamp": "2025-10-03T07:54:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-pb8dl.186aebfad8c452a4",
                "namespace": "kube-system",
                "uid": "2d6ce7a9-ef4b-42a4-9108-602acb47819f",
                "resourceVersion": "447",
                "creationTimestamp": "2025-10-03T07:54:27Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-pb8dl",
                "uid": "9d2a117c-64ab-4d46-b30a-4988d1e17666",
                "apiVersion": "v1",
                "resourceVersion": "409",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Pulled",
            "message": "Container image \"docker.io/kindest/kindnetd:v20230511-dc714da8\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker"
            },
            "firstTimestamp": "2025-10-03T07:54:27Z",
            "lastTimestamp": "2025-10-03T07:54:27Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-pb8dl.186aebfb07caf00b",
                "namespace": "kube-system",
                "uid": "e3e4ed35-3d43-42e4-ba4a-f7518d2ad65a",
                "resourceVersion": "491",
                "creationTimestamp": "2025-10-03T07:54:27Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-pb8dl",
                "uid": "9d2a117c-64ab-4d46-b30a-4988d1e17666",
                "apiVersion": "v1",
                "resourceVersion": "409",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Created",
            "message": "Created container kindnet-cni",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker"
            },
            "firstTimestamp": "2025-10-03T07:54:27Z",
            "lastTimestamp": "2025-10-03T07:54:27Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet-pb8dl.186aebfb1fa20580",
                "namespace": "kube-system",
                "uid": "513f734b-6d7b-48fa-b454-bca147df9453",
                "resourceVersion": "498",
                "creationTimestamp": "2025-10-03T07:54:28Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kindnet-pb8dl",
                "uid": "9d2a117c-64ab-4d46-b30a-4988d1e17666",
                "apiVersion": "v1",
                "resourceVersion": "409",
                "fieldPath": "spec.containers{kindnet-cni}"
            },
            "reason": "Started",
            "message": "Started container kindnet-cni",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker"
            },
            "firstTimestamp": "2025-10-03T07:54:28Z",
            "lastTimestamp": "2025-10-03T07:54:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet.186aebf9dcb1085d",
                "namespace": "kube-system",
                "uid": "74a88579-eaeb-428e-960a-4aef61315059",
                "resourceVersion": "329",
                "creationTimestamp": "2025-10-03T07:54:22Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kindnet",
                "uid": "92b6db25-2ea0-4fbd-969f-91e34a28917b",
                "apiVersion": "apps/v1",
                "resourceVersion": "260"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kindnet-2tkf7",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2025-10-03T07:54:22Z",
            "lastTimestamp": "2025-10-03T07:54:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet.186aebfa6f66549e",
                "namespace": "kube-system",
                "uid": "d9b09b15-cf51-4b11-b626-31627b7d248e",
                "resourceVersion": "408",
                "creationTimestamp": "2025-10-03T07:54:25Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kindnet",
                "uid": "92b6db25-2ea0-4fbd-969f-91e34a28917b",
                "apiVersion": "apps/v1",
                "resourceVersion": "331"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kindnet-pb8dl",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2025-10-03T07:54:25Z",
            "lastTimestamp": "2025-10-03T07:54:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kindnet.186aebfaf70cbbd8",
                "namespace": "kube-system",
                "uid": "10812258-1506-408c-9435-ef86fc271de9",
                "resourceVersion": "486",
                "creationTimestamp": "2025-10-03T07:54:27Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kindnet",
                "uid": "92b6db25-2ea0-4fbd-969f-91e34a28917b",
                "apiVersion": "apps/v1",
                "resourceVersion": "434"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kindnet-24bgg",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2025-10-03T07:54:27Z",
            "lastTimestamp": "2025-10-03T07:54:27Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-controller-manager.186aebf6a871cb36",
                "namespace": "kube-system",
                "uid": "2210cb35-2301-47ee-a5dc-f77eae71f8bc",
                "resourceVersion": "231",
                "creationTimestamp": "2025-10-03T07:54:09Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "kube-controller-manager",
                "uid": "7a37b85e-0aeb-4939-a4c8-94eb59fc76da",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "229"
            },
            "reason": "LeaderElection",
            "message": "lab-cluster-control-plane_64e1a58f-aa1e-424f-bfcb-560f171cb5ce became leader",
            "source": {
                "component": "kube-controller-manager"
            },
            "firstTimestamp": "2025-10-03T07:54:09Z",
            "lastTimestamp": "2025-10-03T07:54:09Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-66wfq.186aebf9dd16f987",
                "namespace": "kube-system",
                "uid": "78a763e6-4158-443f-b2ac-655ccfc0d55c",
                "resourceVersion": "335",
                "creationTimestamp": "2025-10-03T07:54:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-66wfq",
                "uid": "4614b70d-8bfe-4d47-acff-393c707c8c0d",
                "apiVersion": "v1",
                "resourceVersion": "328"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-66wfq to lab-cluster-control-plane",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2025-10-03T07:54:22Z",
            "lastTimestamp": "2025-10-03T07:54:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-66wfq.186aebf9e500027d",
                "namespace": "kube-system",
                "uid": "cd29500d-f082-4ade-ba26-847d81353647",
                "resourceVersion": "348",
                "creationTimestamp": "2025-10-03T07:54:22Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-66wfq",
                "uid": "4614b70d-8bfe-4d47-acff-393c707c8c0d",
                "apiVersion": "v1",
                "resourceVersion": "332"
            },
            "reason": "FailedMount",
            "message": "MountVolume.SetUp failed for volume \"kube-api-access-9jtpf\" : configmap \"kube-root-ca.crt\" not found",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-03T07:54:22Z",
            "lastTimestamp": "2025-10-03T07:54:22Z",
            "count": 1,
            "type": "Warning",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-66wfq.186aebfa1cd784c7",
                "namespace": "kube-system",
                "uid": "235867ed-57ea-441e-bb01-ab346299facc",
                "resourceVersion": "386",
                "creationTimestamp": "2025-10-03T07:54:23Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-66wfq",
                "uid": "4614b70d-8bfe-4d47-acff-393c707c8c0d",
                "apiVersion": "v1",
                "resourceVersion": "332",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-proxy:v1.27.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-03T07:54:23Z",
            "lastTimestamp": "2025-10-03T07:54:23Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-66wfq.186aebfa3819853e",
                "namespace": "kube-system",
                "uid": "51def6d0-ef07-457a-a0e1-9e0c47b86a2b",
                "resourceVersion": "389",
                "creationTimestamp": "2025-10-03T07:54:24Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-66wfq",
                "uid": "4614b70d-8bfe-4d47-acff-393c707c8c0d",
                "apiVersion": "v1",
                "resourceVersion": "332",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-03T07:54:24Z",
            "lastTimestamp": "2025-10-03T07:54:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-66wfq.186aebfa3fbd283e",
                "namespace": "kube-system",
                "uid": "9d9b4399-c4be-4787-b4ab-cb4c0ecbf8f1",
                "resourceVersion": "390",
                "creationTimestamp": "2025-10-03T07:54:24Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-66wfq",
                "uid": "4614b70d-8bfe-4d47-acff-393c707c8c0d",
                "apiVersion": "v1",
                "resourceVersion": "332",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-03T07:54:24Z",
            "lastTimestamp": "2025-10-03T07:54:24Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-lc44j.186aebfa6fc3972b",
                "namespace": "kube-system",
                "uid": "e8d15408-8d17-489d-85f2-5034f0fcf9f3",
                "resourceVersion": "416",
                "creationTimestamp": "2025-10-03T07:54:25Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-lc44j",
                "uid": "48482ba0-6970-4180-926e-f781141f0ae8",
                "apiVersion": "v1",
                "resourceVersion": "405"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-lc44j to lab-cluster-worker",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2025-10-03T07:54:25Z",
            "lastTimestamp": "2025-10-03T07:54:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-lc44j.186aebfac836dd6f",
                "namespace": "kube-system",
                "uid": "b6a8a033-82b7-42e2-b2f3-f89136e023f5",
                "resourceVersion": "443",
                "creationTimestamp": "2025-10-03T07:54:26Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-lc44j",
                "uid": "48482ba0-6970-4180-926e-f781141f0ae8",
                "apiVersion": "v1",
                "resourceVersion": "410",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Pulled",
            "message": "Container image \"registry.k8s.io/kube-proxy:v1.27.3\" already present on machine",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker"
            },
            "firstTimestamp": "2025-10-03T07:54:26Z",
            "lastTimestamp": "2025-10-03T07:54:26Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-lc44j.186aebfae6b25e08",
                "namespace": "kube-system",
                "uid": "989bc6e7-079d-4048-ae65-273d15f040ea",
                "resourceVersion": "462",
                "creationTimestamp": "2025-10-03T07:54:27Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-lc44j",
                "uid": "48482ba0-6970-4180-926e-f781141f0ae8",
                "apiVersion": "v1",
                "resourceVersion": "410",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Created",
            "message": "Created container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker"
            },
            "firstTimestamp": "2025-10-03T07:54:27Z",
            "lastTimestamp": "2025-10-03T07:54:27Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-lc44j.186aebfaeef5cd52",
                "namespace": "kube-system",
                "uid": "c8423268-e641-469a-ad4f-3d4b6e244ab2",
                "resourceVersion": "465",
                "creationTimestamp": "2025-10-03T07:54:27Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-lc44j",
                "uid": "48482ba0-6970-4180-926e-f781141f0ae8",
                "apiVersion": "v1",
                "resourceVersion": "410",
                "fieldPath": "spec.containers{kube-proxy}"
            },
            "reason": "Started",
            "message": "Started container kube-proxy",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker"
            },
            "firstTimestamp": "2025-10-03T07:54:27Z",
            "lastTimestamp": "2025-10-03T07:54:27Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy-spw78.186aebfaf779afbb",
                "namespace": "kube-system",
                "uid": "04318952-4550-4ea1-a794-ca0b4133ec21",
                "resourceVersion": "488",
                "creationTimestamp": "2025-10-03T07:54:27Z"
            },
            "involvedObject": {
                "kind": "Pod",
                "namespace": "kube-system",
                "name": "kube-proxy-spw78",
                "uid": "e39c7948-da47-4e84-b058-6b0c2ff89c6b",
                "apiVersion": "v1",
                "resourceVersion": "478"
            },
            "reason": "Scheduled",
            "message": "Successfully assigned kube-system/kube-proxy-spw78 to lab-cluster-worker2",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2025-10-03T07:54:27Z",
            "lastTimestamp": "2025-10-03T07:54:27Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy.186aebf9dcbaac2d",
                "namespace": "kube-system",
                "uid": "a0b2df34-7bde-4d01-998f-2714b2f1a5c3",
                "resourceVersion": "334",
                "creationTimestamp": "2025-10-03T07:54:22Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "2ea4d34c-1985-49b6-b67e-346db9dab180",
                "apiVersion": "apps/v1",
                "resourceVersion": "225"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-66wfq",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2025-10-03T07:54:22Z",
            "lastTimestamp": "2025-10-03T07:54:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy.186aebfa6f682117",
                "namespace": "kube-system",
                "uid": "0b9cadc3-b0de-4dc3-a8ad-3e92fd094586",
                "resourceVersion": "413",
                "creationTimestamp": "2025-10-03T07:54:25Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "2ea4d34c-1985-49b6-b67e-346db9dab180",
                "apiVersion": "apps/v1",
                "resourceVersion": "395"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-lc44j",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2025-10-03T07:54:25Z",
            "lastTimestamp": "2025-10-03T07:54:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-proxy.186aebfaf70ceaf9",
                "namespace": "kube-system",
                "uid": "77f82b2a-eb20-4eee-b61f-4c67bd999202",
                "resourceVersion": "480",
                "creationTimestamp": "2025-10-03T07:54:27Z"
            },
            "involvedObject": {
                "kind": "DaemonSet",
                "namespace": "kube-system",
                "name": "kube-proxy",
                "uid": "2ea4d34c-1985-49b6-b67e-346db9dab180",
                "apiVersion": "apps/v1",
                "resourceVersion": "412"
            },
            "reason": "SuccessfulCreate",
            "message": "Created pod: kube-proxy-spw78",
            "source": {
                "component": "daemonset-controller"
            },
            "firstTimestamp": "2025-10-03T07:54:27Z",
            "lastTimestamp": "2025-10-03T07:54:27Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "kube-scheduler.186aebf6db3ff297",
                "namespace": "kube-system",
                "uid": "d31d959d-1590-498d-a57f-a41321d41a54",
                "resourceVersion": "248",
                "creationTimestamp": "2025-10-03T07:54:09Z"
            },
            "involvedObject": {
                "kind": "Lease",
                "namespace": "kube-system",
                "name": "kube-scheduler",
                "uid": "6b874702-c2c4-461a-adbb-2f7828718920",
                "apiVersion": "coordination.k8s.io/v1",
                "resourceVersion": "247"
            },
            "reason": "LeaderElection",
            "message": "lab-cluster-control-plane_e3ac3c6b-b5bb-4fc4-9afb-de5b881345af became leader",
            "source": {
                "component": "default-scheduler"
            },
            "firstTimestamp": "2025-10-03T07:54:09Z",
            "lastTimestamp": "2025-10-03T07:54:09Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "514"
    },
    "items": null
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "514"
    },
    "items": [
        {
            "metadata": {
                "name": "kube-dns",
                "namespace": "kube-system",
                "uid": "cac20623-0e0c-4342-85a8-31df99e08daf",
                "resourceVersion": "223",
                "creationTimestamp": "2025-10-03T07:54:09Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "kubernetes.io/cluster-service": "true",
                    "kubernetes.io/name": "CoreDNS"
                },
                "annotations": {
                    "prometheus.io/port": "9153",
                    "prometheus.io/scrape": "true"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "dns",
                        "protocol": "UDP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "dns-tcp",
                        "protocol": "TCP",
                        "port": 53,
                        "targetPort": 53
                    },
                    {
                        "name": "metrics",
                        "protocol": "TCP",
                        "port": 9153,
                        "targetPort": 9153
                    }
                ],
                "selector": {
                    "k8s-app": "kube-dns"
                },
                "clusterIP": "10.96.0.10",
                "clusterIPs": [
                    "10.96.0.10"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "514"
    },
    "items": [
        {
            "metadata": {
                "name": "kindnet",
                "namespace": "kube-system",
                "uid": "92b6db25-2ea0-4fbd-969f-91e34a28917b",
                "resourceVersion": "513",
                "generation": 1,
                "creationTimestamp": "2025-10-03T07:54:10Z",
                "labels": {
                    "app": "kindnet",
                    "k8s-app": "kindnet",
                    "tier": "node"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "app": "kindnet"
                    }
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "app": "kindnet",
                            "k8s-app": "kindnet",
                            "tier": "node"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "cni-cfg",
                                "hostPath": {
                                    "path": "/etc/cni/net.d",
                                    "type": ""
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kindnet-cni",
                                "image": "docker.io/kindest/kindnetd:v20230511-dc714da8",
                                "env": [
                                    {
                                        "name": "HOST_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.hostIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_IP",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "status.podIP"
                                            }
                                        }
                                    },
                                    {
                                        "name": "POD_SUBNET",
                                        "value": "10.244.0.0/16"
                                    },
                                    {
                                        "name": "CONTROL_PLANE_ENDPOINT",
                                        "value": "lab-cluster-control-plane:6443"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "100m",
                                        "memory": "50Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "50Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "cni-cfg",
                                        "mountPath": "/etc/cni/net.d"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_RAW",
                                            "NET_ADMIN"
                                        ]
                                    },
                                    "privileged": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kindnet",
                        "serviceAccount": "kindnet",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ]
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 3,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 3,
                "numberReady": 2,
                "observedGeneration": 1,
                "updatedNumberScheduled": 3,
                "numberAvailable": 2,
                "numberUnavailable": 1
            }
        },
        {
            "metadata": {
                "name": "kube-proxy",
                "namespace": "kube-system",
                "uid": "2ea4d34c-1985-49b6-b67e-346db9dab180",
                "resourceVersion": "497",
                "generation": 1,
                "creationTimestamp": "2025-10-03T07:54:09Z",
                "labels": {
                    "k8s-app": "kube-proxy"
                },
                "annotations": {
                    "deprecated.daemonset.template.generation": "1"
                }
            },
            "spec": {
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-proxy"
                    }
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "k8s-app": "kube-proxy"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "kube-proxy",
                                "configMap": {
                                    "name": "kube-proxy",
                                    "defaultMode": 420
                                }
                            },
                            {
                                "name": "xtables-lock",
                                "hostPath": {
                                    "path": "/run/xtables.lock",
                                    "type": "FileOrCreate"
                                }
                            },
                            {
                                "name": "lib-modules",
                                "hostPath": {
                                    "path": "/lib/modules",
                                    "type": ""
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "kube-proxy",
                                "image": "registry.k8s.io/kube-proxy:v1.27.3",
                                "command": [
                                    "/usr/local/bin/kube-proxy",
                                    "--config=/var/lib/kube-proxy/config.conf",
                                    "--hostname-override=$(NODE_NAME)"
                                ],
                                "env": [
                                    {
                                        "name": "NODE_NAME",
                                        "valueFrom": {
                                            "fieldRef": {
                                                "apiVersion": "v1",
                                                "fieldPath": "spec.nodeName"
                                            }
                                        }
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "kube-proxy",
                                        "mountPath": "/var/lib/kube-proxy"
                                    },
                                    {
                                        "name": "xtables-lock",
                                        "mountPath": "/run/xtables.lock"
                                    },
                                    {
                                        "name": "lib-modules",
                                        "readOnly": true,
                                        "mountPath": "/lib/modules"
                                    }
                                ],
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "privileged": true
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "kube-proxy",
                        "serviceAccount": "kube-proxy",
                        "hostNetwork": true,
                        "securityContext": {},
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "operator": "Exists"
                            }
                        ],
                        "priorityClassName": "system-node-critical"
                    }
                },
                "updateStrategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": 0
                    }
                },
                "revisionHistoryLimit": 10
            },
            "status": {
                "currentNumberScheduled": 3,
                "numberMisscheduled": 0,
                "desiredNumberScheduled": 3,
                "numberReady": 2,
                "observedGeneration": 1,
                "updatedNumberScheduled": 3,
                "numberAvailable": 2,
                "numberUnavailable": 1
            }
        }
    ]
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "514"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns",
                "namespace": "kube-system",
                "uid": "289f1a4a-36f8-41d4-9f12-4ec4f1baf9e1",
                "resourceVersion": "458",
                "generation": 1,
                "creationTimestamp": "2025-10-03T07:54:09Z",
                "labels": {
                    "k8s-app": "kube-dns"
                },
                "annotations": {
                    "deployment.kubernetes.io/revision": "1"
                }
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns"
                    }
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "k8s-app": "kube-dns"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "registry.k8s.io/coredns/coredns:v1.10.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                },
                "strategy": {
                    "type": "RollingUpdate",
                    "rollingUpdate": {
                        "maxUnavailable": 1,
                        "maxSurge": "25%"
                    }
                },
                "revisionHistoryLimit": 10,
                "progressDeadlineSeconds": 600
            },
            "status": {
                "observedGeneration": 1,
                "replicas": 2,
                "updatedReplicas": 2,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "unavailableReplicas": 1,
                "conditions": [
                    {
                        "type": "Available",
                        "status": "True",
                        "lastUpdateTime": "2025-10-03T07:54:27Z",
                        "lastTransitionTime": "2025-10-03T07:54:27Z",
                        "reason": "MinimumReplicasAvailable",
                        "message": "Deployment has minimum availability."
                    },
                    {
                        "type": "Progressing",
                        "status": "True",
                        "lastUpdateTime": "2025-10-03T07:54:27Z",
                        "lastTransitionTime": "2025-10-03T07:54:22Z",
                        "reason": "ReplicaSetUpdated",
                        "message": "ReplicaSet \"coredns-5d78c9869d\" is progressing."
                    }
                ]
            }
        }
    ]
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "514"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-5d78c9869d",
                "namespace": "kube-system",
                "uid": "40e73bbd-ee69-4db0-a300-f8f39d087795",
                "resourceVersion": "456",
                "generation": 1,
                "creationTimestamp": "2025-10-03T07:54:22Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "5d78c9869d"
                },
                "annotations": {
                    "deployment.kubernetes.io/desired-replicas": "2",
                    "deployment.kubernetes.io/max-replicas": "3",
                    "deployment.kubernetes.io/revision": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "Deployment",
                        "name": "coredns",
                        "uid": "289f1a4a-36f8-41d4-9f12-4ec4f1baf9e1",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "replicas": 2,
                "selector": {
                    "matchLabels": {
                        "k8s-app": "kube-dns",
                        "pod-template-hash": "5d78c9869d"
                    }
                },
                "template": {
                    "metadata": {
                        "labels": {
                            "k8s-app": "kube-dns",
                            "pod-template-hash": "5d78c9869d"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "config-volume",
                                "configMap": {
                                    "name": "coredns",
                                    "items": [
                                        {
                                            "key": "Corefile",
                                            "path": "Corefile"
                                        }
                                    ],
                                    "defaultMode": 420
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "coredns",
                                "image": "registry.k8s.io/coredns/coredns:v1.10.1",
                                "args": [
                                    "-conf",
                                    "/etc/coredns/Corefile"
                                ],
                                "ports": [
                                    {
                                        "name": "dns",
                                        "containerPort": 53,
                                        "protocol": "UDP"
                                    },
                                    {
                                        "name": "dns-tcp",
                                        "containerPort": 53,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "name": "metrics",
                                        "containerPort": 9153,
                                        "protocol": "TCP"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "memory": "170Mi"
                                    },
                                    "requests": {
                                        "cpu": "100m",
                                        "memory": "70Mi"
                                    }
                                },
                                "volumeMounts": [
                                    {
                                        "name": "config-volume",
                                        "readOnly": true,
                                        "mountPath": "/etc/coredns"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 60,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 5
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ready",
                                        "port": 8181,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 1,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 3
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "terminationMessagePolicy": "File",
                                "imagePullPolicy": "IfNotPresent",
                                "securityContext": {
                                    "capabilities": {
                                        "add": [
                                            "NET_BIND_SERVICE"
                                        ],
                                        "drop": [
                                            "all"
                                        ]
                                    },
                                    "readOnlyRootFilesystem": true,
                                    "allowPrivilegeEscalation": false
                                }
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "Default",
                        "nodeSelector": {
                            "kubernetes.io/os": "linux"
                        },
                        "serviceAccountName": "coredns",
                        "serviceAccount": "coredns",
                        "securityContext": {},
                        "affinity": {
                            "podAntiAffinity": {
                                "preferredDuringSchedulingIgnoredDuringExecution": [
                                    {
                                        "weight": 100,
                                        "podAffinityTerm": {
                                            "labelSelector": {
                                                "matchExpressions": [
                                                    {
                                                        "key": "k8s-app",
                                                        "operator": "In",
                                                        "values": [
                                                            "kube-dns"
                                                        ]
                                                    }
                                                ]
                                            },
                                            "topologyKey": "kubernetes.io/hostname"
                                        }
                                    }
                                ]
                            }
                        },
                        "schedulerName": "default-scheduler",
                        "tolerations": [
                            {
                                "key": "CriticalAddonsOnly",
                                "operator": "Exists"
                            },
                            {
                                "key": "node-role.kubernetes.io/control-plane",
                                "effect": "NoSchedule"
                            }
                        ],
                        "priorityClassName": "system-cluster-critical"
                    }
                }
            },
            "status": {
                "replicas": 2,
                "fullyLabeledReplicas": 2,
                "readyReplicas": 1,
                "availableReplicas": 1,
                "observedGeneration": 1
            }
        }
    ]
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "514"
    },
    "items": [
        {
            "metadata": {
                "name": "coredns-5d78c9869d-f6qvq",
                "generateName": "coredns-5d78c9869d-",
                "namespace": "kube-system",
                "uid": "b495eea5-7b95-4fa8-b5d4-b23fef774f89",
                "resourceVersion": "453",
                "creationTimestamp": "2025-10-03T07:54:23Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "5d78c9869d"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-5d78c9869d",
                        "uid": "40e73bbd-ee69-4db0-a300-f8f39d087795",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-lrj2l",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "registry.k8s.io/coredns/coredns:v1.10.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-lrj2l",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "lab-cluster-control-plane",
                "securityContext": {},
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:25Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:27Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:27Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:25Z"
                    }
                ],
                "hostIP": "172.26.0.5",
                "podIP": "10.244.0.3",
                "podIPs": [
                    {
                        "ip": "10.244.0.3"
                    }
                ],
                "startTime": "2025-10-03T07:54:25Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2025-10-03T07:54:26Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/coredns/coredns:v1.10.1",
                        "imageID": "sha256:ead0a4a53df89fd173874b46093b6e62d8c72967bbf606d672c9e8c9b601a4fc",
                        "containerID": "containerd://a574c919daa1e5e97c54f77d66a13f7a5b9ec011c8b6b39c7cae48bd50fffc80",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "coredns-5d78c9869d-nt47d",
                "generateName": "coredns-5d78c9869d-",
                "namespace": "kube-system",
                "uid": "f10fd06a-27b1-4e19-9088-60f33512c544",
                "resourceVersion": "457",
                "creationTimestamp": "2025-10-03T07:54:23Z",
                "labels": {
                    "k8s-app": "kube-dns",
                    "pod-template-hash": "5d78c9869d"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "ReplicaSet",
                        "name": "coredns-5d78c9869d",
                        "uid": "40e73bbd-ee69-4db0-a300-f8f39d087795",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "config-volume",
                        "configMap": {
                            "name": "coredns",
                            "items": [
                                {
                                    "key": "Corefile",
                                    "path": "Corefile"
                                }
                            ],
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "kube-api-access-xrcf8",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "coredns",
                        "image": "registry.k8s.io/coredns/coredns:v1.10.1",
                        "args": [
                            "-conf",
                            "/etc/coredns/Corefile"
                        ],
                        "ports": [
                            {
                                "name": "dns",
                                "containerPort": 53,
                                "protocol": "UDP"
                            },
                            {
                                "name": "dns-tcp",
                                "containerPort": 53,
                                "protocol": "TCP"
                            },
                            {
                                "name": "metrics",
                                "containerPort": 9153,
                                "protocol": "TCP"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "memory": "170Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "70Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "config-volume",
                                "readOnly": true,
                                "mountPath": "/etc/coredns"
                            },
                            {
                                "name": "kube-api-access-xrcf8",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health",
                                "port": 8080,
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 60,
                            "timeoutSeconds": 5,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 5
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/ready",
                                "port": 8181,
                                "scheme": "HTTP"
                            },
                            "timeoutSeconds": 1,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_BIND_SERVICE"
                                ],
                                "drop": [
                                    "all"
                                ]
                            },
                            "readOnlyRootFilesystem": true,
                            "allowPrivilegeEscalation": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "Default",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "coredns",
                "serviceAccount": "coredns",
                "nodeName": "lab-cluster-control-plane",
                "securityContext": {},
                "affinity": {
                    "podAntiAffinity": {
                        "preferredDuringSchedulingIgnoredDuringExecution": [
                            {
                                "weight": 100,
                                "podAffinityTerm": {
                                    "labelSelector": {
                                        "matchExpressions": [
                                            {
                                                "key": "k8s-app",
                                                "operator": "In",
                                                "values": [
                                                    "kube-dns"
                                                ]
                                            }
                                        ]
                                    },
                                    "topologyKey": "kubernetes.io/hostname"
                                }
                            }
                        ]
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "key": "CriticalAddonsOnly",
                        "operator": "Exists"
                    },
                    {
                        "key": "node-role.kubernetes.io/control-plane",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute",
                        "tolerationSeconds": 300
                    }
                ],
                "priorityClassName": "system-cluster-critical",
                "priority": 2000000000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:25Z"
                    },
                    {
                        "type": "Ready",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:25Z",
                        "reason": "ContainersNotReady",
                        "message": "containers with unready status: [coredns]"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "False",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:25Z",
                        "reason": "ContainersNotReady",
                        "message": "containers with unready status: [coredns]"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:25Z"
                    }
                ],
                "hostIP": "172.26.0.5",
                "podIP": "10.244.0.2",
                "podIPs": [
                    {
                        "ip": "10.244.0.2"
                    }
                ],
                "startTime": "2025-10-03T07:54:25Z",
                "containerStatuses": [
                    {
                        "name": "coredns",
                        "state": {
                            "running": {
                                "startedAt": "2025-10-03T07:54:26Z"
                            }
                        },
                        "lastState": {},
                        "ready": false,
                        "restartCount": 0,
                        "image": "registry.k8s.io/coredns/coredns:v1.10.1",
                        "imageID": "sha256:ead0a4a53df89fd173874b46093b6e62d8c72967bbf606d672c9e8c9b601a4fc",
                        "containerID": "containerd://db529da4d1dc95ddd908fd5dccf8a0571196e28730ffac12bc6688742d6fd1d2",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "etcd-lab-cluster-control-plane",
                "namespace": "kube-system",
                "uid": "24c9626f-ef04-4eed-b82b-e73326768879",
                "resourceVersion": "283",
                "creationTimestamp": "2025-10-03T07:54:07Z",
                "labels": {
                    "component": "etcd",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/etcd.advertise-client-urls": "https://172.26.0.5:2379",
                    "kubernetes.io/config.hash": "80eac6f9e1b1e0693dc5c6487a00393f",
                    "kubernetes.io/config.mirror": "80eac6f9e1b1e0693dc5c6487a00393f",
                    "kubernetes.io/config.seen": "2025-10-03T07:54:01.951118193Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "lab-cluster-control-plane",
                        "uid": "13198dd4-40a3-4433-ab80-7fc2fabcf1d6",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "etcd-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etcd-data",
                        "hostPath": {
                            "path": "/var/lib/etcd",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "etcd",
                        "image": "registry.k8s.io/etcd:3.5.7-0",
                        "command": [
                            "etcd",
                            "--advertise-client-urls=https://172.26.0.5:2379",
                            "--cert-file=/etc/kubernetes/pki/etcd/server.crt",
                            "--client-cert-auth=true",
                            "--data-dir=/var/lib/etcd",
                            "--experimental-initial-corrupt-check=true",
                            "--experimental-watch-progress-notify-interval=5s",
                            "--initial-advertise-peer-urls=https://172.26.0.5:2380",
                            "--initial-cluster=lab-cluster-control-plane=https://172.26.0.5:2380",
                            "--key-file=/etc/kubernetes/pki/etcd/server.key",
                            "--listen-client-urls=https://127.0.0.1:2379,https://172.26.0.5:2379",
                            "--listen-metrics-urls=http://127.0.0.1:2381",
                            "--listen-peer-urls=https://172.26.0.5:2380",
                            "--name=lab-cluster-control-plane",
                            "--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt",
                            "--peer-client-cert-auth=true",
                            "--peer-key-file=/etc/kubernetes/pki/etcd/peer.key",
                            "--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt",
                            "--snapshot-count=10000",
                            "--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m",
                                "memory": "100Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "etcd-data",
                                "mountPath": "/var/lib/etcd"
                            },
                            {
                                "name": "etcd-certs",
                                "mountPath": "/etc/kubernetes/pki/etcd"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/health?exclude=NOSPACE\u0026serializable=true",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/health?serializable=false",
                                "port": 2381,
                                "host": "127.0.0.1",
                                "scheme": "HTTP"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "lab-cluster-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:09Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:18Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:18Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:09Z"
                    }
                ],
                "hostIP": "172.26.0.5",
                "podIP": "172.26.0.5",
                "podIPs": [
                    {
                        "ip": "172.26.0.5"
                    }
                ],
                "startTime": "2025-10-03T07:54:09Z",
                "containerStatuses": [
                    {
                        "name": "etcd",
                        "state": {
                            "running": {
                                "startedAt": "2025-10-03T07:54:04Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/etcd:3.5.7-0",
                        "imageID": "sha256:86b6af7dd652c1b38118be1c338e9354b33469e69a218f7e290a0ca5304ad681",
                        "containerID": "containerd://694d29a845c672556ec5b8afe924f9e087c67dab766ceb6220bb1c314ce81e1c",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kindnet-24bgg",
                "generateName": "kindnet-",
                "namespace": "kube-system",
                "uid": "5148e856-68de-405b-9c3d-76287f0bbdbc",
                "resourceVersion": "484",
                "creationTimestamp": "2025-10-03T07:54:27Z",
                "labels": {
                    "app": "kindnet",
                    "controller-revision-hash": "6df777b59",
                    "k8s-app": "kindnet",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kindnet",
                        "uid": "92b6db25-2ea0-4fbd-969f-91e34a28917b",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-cfg",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-9fwpr",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kindnet-cni",
                        "image": "docker.io/kindest/kindnetd:v20230511-dc714da8",
                        "env": [
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_SUBNET",
                                "value": "10.244.0.0/16"
                            },
                            {
                                "name": "CONTROL_PLANE_ENDPOINT",
                                "value": "lab-cluster-control-plane:6443"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-cfg",
                                "mountPath": "/etc/cni/net.d"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-9fwpr",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_RAW",
                                    "NET_ADMIN"
                                ]
                            },
                            "privileged": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kindnet",
                "serviceAccount": "kindnet",
                "nodeName": "lab-cluster-worker2",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "lab-cluster-worker2"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:27Z"
                    }
                ],
                "qosClass": "Guaranteed"
            }
        },
        {
            "metadata": {
                "name": "kindnet-2tkf7",
                "generateName": "kindnet-",
                "namespace": "kube-system",
                "uid": "d0388c9a-2e29-4f5b-a8f1-3f87009649e7",
                "resourceVersion": "433",
                "creationTimestamp": "2025-10-03T07:54:22Z",
                "labels": {
                    "app": "kindnet",
                    "controller-revision-hash": "6df777b59",
                    "k8s-app": "kindnet",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kindnet",
                        "uid": "92b6db25-2ea0-4fbd-969f-91e34a28917b",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-cfg",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-zdvkv",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kindnet-cni",
                        "image": "docker.io/kindest/kindnetd:v20230511-dc714da8",
                        "env": [
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_SUBNET",
                                "value": "10.244.0.0/16"
                            },
                            {
                                "name": "CONTROL_PLANE_ENDPOINT",
                                "value": "lab-cluster-control-plane:6443"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-cfg",
                                "mountPath": "/etc/cni/net.d"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-zdvkv",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_RAW",
                                    "NET_ADMIN"
                                ]
                            },
                            "privileged": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kindnet",
                "serviceAccount": "kindnet",
                "nodeName": "lab-cluster-control-plane",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "lab-cluster-control-plane"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:22Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:26Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:26Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:22Z"
                    }
                ],
                "hostIP": "172.26.0.5",
                "podIP": "172.26.0.5",
                "podIPs": [
                    {
                        "ip": "172.26.0.5"
                    }
                ],
                "startTime": "2025-10-03T07:54:22Z",
                "containerStatuses": [
                    {
                        "name": "kindnet-cni",
                        "state": {
                            "running": {
                                "startedAt": "2025-10-03T07:54:25Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "docker.io/kindest/kindnetd:v20230511-dc714da8",
                        "imageID": "sha256:b0b1fa0f58c6e932b7f20bf208b2841317a1e8c88cc51b18358310bbd8ec95da",
                        "containerID": "containerd://fef13bb34d1620894144740d5536184afe8c86fa0aecef4878bf325d66fa9e99",
                        "started": true
                    }
                ],
                "qosClass": "Guaranteed"
            }
        },
        {
            "metadata": {
                "name": "kindnet-pb8dl",
                "generateName": "kindnet-",
                "namespace": "kube-system",
                "uid": "9d2a117c-64ab-4d46-b30a-4988d1e17666",
                "resourceVersion": "512",
                "creationTimestamp": "2025-10-03T07:54:25Z",
                "labels": {
                    "app": "kindnet",
                    "controller-revision-hash": "6df777b59",
                    "k8s-app": "kindnet",
                    "pod-template-generation": "1",
                    "tier": "node"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kindnet",
                        "uid": "92b6db25-2ea0-4fbd-969f-91e34a28917b",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "cni-cfg",
                        "hostPath": {
                            "path": "/etc/cni/net.d",
                            "type": ""
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-nxt4b",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kindnet-cni",
                        "image": "docker.io/kindest/kindnetd:v20230511-dc714da8",
                        "env": [
                            {
                                "name": "HOST_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.hostIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_IP",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "status.podIP"
                                    }
                                }
                            },
                            {
                                "name": "POD_SUBNET",
                                "value": "10.244.0.0/16"
                            },
                            {
                                "name": "CONTROL_PLANE_ENDPOINT",
                                "value": "lab-cluster-control-plane:6443"
                            }
                        ],
                        "resources": {
                            "limits": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            },
                            "requests": {
                                "cpu": "100m",
                                "memory": "50Mi"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "cni-cfg",
                                "mountPath": "/etc/cni/net.d"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-nxt4b",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "capabilities": {
                                "add": [
                                    "NET_RAW",
                                    "NET_ADMIN"
                                ]
                            },
                            "privileged": false
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kindnet",
                "serviceAccount": "kindnet",
                "nodeName": "lab-cluster-worker",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "lab-cluster-worker"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priority": 0,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:26Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:29Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:29Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:25Z"
                    }
                ],
                "hostIP": "172.26.0.6",
                "podIP": "172.26.0.6",
                "podIPs": [
                    {
                        "ip": "172.26.0.6"
                    }
                ],
                "startTime": "2025-10-03T07:54:26Z",
                "containerStatuses": [
                    {
                        "name": "kindnet-cni",
                        "state": {
                            "running": {
                                "startedAt": "2025-10-03T07:54:28Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "docker.io/kindest/kindnetd:v20230511-dc714da8",
                        "imageID": "sha256:b0b1fa0f58c6e932b7f20bf208b2841317a1e8c88cc51b18358310bbd8ec95da",
                        "containerID": "containerd://f6ca023b0e744bcafadb319152e85d529493525c4f96fec4963853d7cef6b1a7",
                        "started": true
                    }
                ],
                "qosClass": "Guaranteed"
            }
        },
        {
            "metadata": {
                "name": "kube-apiserver-lab-cluster-control-plane",
                "namespace": "kube-system",
                "uid": "a66fb7c0-48a2-4455-a775-f14bbc953431",
                "resourceVersion": "273",
                "creationTimestamp": "2025-10-03T07:54:06Z",
                "labels": {
                    "component": "kube-apiserver",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubeadm.kubernetes.io/kube-apiserver.advertise-address.endpoint": "172.26.0.5:6443",
                    "kubernetes.io/config.hash": "31b35fd8e9eea1025c86cf8edd361ca4",
                    "kubernetes.io/config.mirror": "31b35fd8e9eea1025c86cf8edd361ca4",
                    "kubernetes.io/config.seen": "2025-10-03T07:54:01.951121033Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "lab-cluster-control-plane",
                        "uid": "13198dd4-40a3-4433-ab80-7fc2fabcf1d6",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-apiserver",
                        "image": "registry.k8s.io/kube-apiserver:v1.27.3",
                        "command": [
                            "kube-apiserver",
                            "--advertise-address=172.26.0.5",
                            "--allow-privileged=true",
                            "--authorization-mode=Node,RBAC",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--enable-admission-plugins=NodeRestriction",
                            "--enable-bootstrap-token-auth=true",
                            "--etcd-cafile=/etc/kubernetes/pki/etcd/ca.crt",
                            "--etcd-certfile=/etc/kubernetes/pki/apiserver-etcd-client.crt",
                            "--etcd-keyfile=/etc/kubernetes/pki/apiserver-etcd-client.key",
                            "--etcd-servers=https://127.0.0.1:2379",
                            "--kubelet-client-certificate=/etc/kubernetes/pki/apiserver-kubelet-client.crt",
                            "--kubelet-client-key=/etc/kubernetes/pki/apiserver-kubelet-client.key",
                            "--kubelet-preferred-address-types=InternalIP,ExternalIP,Hostname",
                            "--proxy-client-cert-file=/etc/kubernetes/pki/front-proxy-client.crt",
                            "--proxy-client-key-file=/etc/kubernetes/pki/front-proxy-client.key",
                            "--requestheader-allowed-names=front-proxy-client",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--requestheader-extra-headers-prefix=X-Remote-Extra-",
                            "--requestheader-group-headers=X-Remote-Group",
                            "--requestheader-username-headers=X-Remote-User",
                            "--runtime-config=",
                            "--secure-port=6443",
                            "--service-account-issuer=https://kubernetes.default.svc.cluster.local",
                            "--service-account-key-file=/etc/kubernetes/pki/sa.pub",
                            "--service-account-signing-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/16",
                            "--tls-cert-file=/etc/kubernetes/pki/apiserver.crt",
                            "--tls-private-key-file=/etc/kubernetes/pki/apiserver.key"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "250m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/pki"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 6443,
                                "host": "172.26.0.5",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "readinessProbe": {
                            "httpGet": {
                                "path": "/readyz",
                                "port": 6443,
                                "host": "172.26.0.5",
                                "scheme": "HTTPS"
                            },
                            "timeoutSeconds": 15,
                            "periodSeconds": 1,
                            "successThreshold": 1,
                            "failureThreshold": 3
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/livez",
                                "port": 6443,
                                "host": "172.26.0.5",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "lab-cluster-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:09Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:14Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:14Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:09Z"
                    }
                ],
                "hostIP": "172.26.0.5",
                "podIP": "172.26.0.5",
                "podIPs": [
                    {
                        "ip": "172.26.0.5"
                    }
                ],
                "startTime": "2025-10-03T07:54:09Z",
                "containerStatuses": [
                    {
                        "name": "kube-apiserver",
                        "state": {
                            "running": {
                                "startedAt": "2025-10-03T07:54:03Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-apiserver:v1.27.3",
                        "imageID": "docker.io/library/import-2023-06-15@sha256:0202953c0b15043ca535e81d97f7062240ae66ea044b24378370d6e577782762",
                        "containerID": "containerd://1eae6bdb0e435d27ab27a6c0cbcb224d2a01493f3b22c8af287e9d9ebe7fe5bd",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-controller-manager-lab-cluster-control-plane",
                "namespace": "kube-system",
                "uid": "abe28473-7af5-47b1-99df-550b06c693a7",
                "resourceVersion": "277",
                "creationTimestamp": "2025-10-03T07:54:07Z",
                "labels": {
                    "component": "kube-controller-manager",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "5b5d0582321ce45481a1b97b84a0a92d",
                    "kubernetes.io/config.mirror": "5b5d0582321ce45481a1b97b84a0a92d",
                    "kubernetes.io/config.seen": "2025-10-03T07:54:01.951121963Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "lab-cluster-control-plane",
                        "uid": "13198dd4-40a3-4433-ab80-7fc2fabcf1d6",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "ca-certs",
                        "hostPath": {
                            "path": "/etc/ssl/certs",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "etc-ca-certificates",
                        "hostPath": {
                            "path": "/etc/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "flexvolume-dir",
                        "hostPath": {
                            "path": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "k8s-certs",
                        "hostPath": {
                            "path": "/etc/kubernetes/pki",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/controller-manager.conf",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "usr-local-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/local/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    },
                    {
                        "name": "usr-share-ca-certificates",
                        "hostPath": {
                            "path": "/usr/share/ca-certificates",
                            "type": "DirectoryOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-controller-manager",
                        "image": "registry.k8s.io/kube-controller-manager:v1.27.3",
                        "command": [
                            "kube-controller-manager",
                            "--allocate-node-cidrs=true",
                            "--authentication-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--bind-address=127.0.0.1",
                            "--client-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-cidr=10.244.0.0/16",
                            "--cluster-name=lab-cluster",
                            "--cluster-signing-cert-file=/etc/kubernetes/pki/ca.crt",
                            "--cluster-signing-key-file=/etc/kubernetes/pki/ca.key",
                            "--controllers=*,bootstrapsigner,tokencleaner",
                            "--enable-hostpath-provisioner=true",
                            "--kubeconfig=/etc/kubernetes/controller-manager.conf",
                            "--leader-elect=true",
                            "--requestheader-client-ca-file=/etc/kubernetes/pki/front-proxy-ca.crt",
                            "--root-ca-file=/etc/kubernetes/pki/ca.crt",
                            "--service-account-private-key-file=/etc/kubernetes/pki/sa.key",
                            "--service-cluster-ip-range=10.96.0.0/16",
                            "--use-service-account-credentials=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "200m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "ca-certs",
                                "readOnly": true,
                                "mountPath": "/etc/ssl/certs"
                            },
                            {
                                "name": "etc-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/etc/ca-certificates"
                            },
                            {
                                "name": "flexvolume-dir",
                                "mountPath": "/usr/libexec/kubernetes/kubelet-plugins/volume/exec"
                            },
                            {
                                "name": "k8s-certs",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/pki"
                            },
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/controller-manager.conf"
                            },
                            {
                                "name": "usr-local-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/local/share/ca-certificates"
                            },
                            {
                                "name": "usr-share-ca-certificates",
                                "readOnly": true,
                                "mountPath": "/usr/share/ca-certificates"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10257,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "lab-cluster-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:09Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:16Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:16Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:09Z"
                    }
                ],
                "hostIP": "172.26.0.5",
                "podIP": "172.26.0.5",
                "podIPs": [
                    {
                        "ip": "172.26.0.5"
                    }
                ],
                "startTime": "2025-10-03T07:54:09Z",
                "containerStatuses": [
                    {
                        "name": "kube-controller-manager",
                        "state": {
                            "running": {
                                "startedAt": "2025-10-03T07:54:03Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-controller-manager:v1.27.3",
                        "imageID": "docker.io/library/import-2023-06-15@sha256:bdbeb95d8a0820cbc385e44f75ed25799ac8961e952ded26aa2a09b3377dfee7",
                        "containerID": "containerd://5091ca25e912b406c486478f31523a6b1d299b0eb054d830e318b3d8f779a52b",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-66wfq",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "4614b70d-8bfe-4d47-acff-393c707c8c0d",
                "resourceVersion": "393",
                "creationTimestamp": "2025-10-03T07:54:22Z",
                "labels": {
                    "controller-revision-hash": "56999f657b",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "2ea4d34c-1985-49b6-b67e-346db9dab180",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-9jtpf",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "registry.k8s.io/kube-proxy:v1.27.3",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-9jtpf",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "lab-cluster-control-plane",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "lab-cluster-control-plane"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:22Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:25Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:25Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:22Z"
                    }
                ],
                "hostIP": "172.26.0.5",
                "podIP": "172.26.0.5",
                "podIPs": [
                    {
                        "ip": "172.26.0.5"
                    }
                ],
                "startTime": "2025-10-03T07:54:22Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2025-10-03T07:54:24Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-proxy:v1.27.3",
                        "imageID": "docker.io/library/import-2023-06-15@sha256:ce2145a147b3f1fc440ba15eaa91b879ba9cbf929c8dd8f3190868f4373f2183",
                        "containerID": "containerd://68072d794200db13726878cabaa60fc039e208c44fdcc28740d6780ca0d6768f",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-lc44j",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "48482ba0-6970-4180-926e-f781141f0ae8",
                "resourceVersion": "496",
                "creationTimestamp": "2025-10-03T07:54:25Z",
                "labels": {
                    "controller-revision-hash": "56999f657b",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "2ea4d34c-1985-49b6-b67e-346db9dab180",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-bz9rv",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "registry.k8s.io/kube-proxy:v1.27.3",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-bz9rv",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "lab-cluster-worker",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "lab-cluster-worker"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:26Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:28Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:28Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:25Z"
                    }
                ],
                "hostIP": "172.26.0.6",
                "podIP": "172.26.0.6",
                "podIPs": [
                    {
                        "ip": "172.26.0.6"
                    }
                ],
                "startTime": "2025-10-03T07:54:26Z",
                "containerStatuses": [
                    {
                        "name": "kube-proxy",
                        "state": {
                            "running": {
                                "startedAt": "2025-10-03T07:54:27Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-proxy:v1.27.3",
                        "imageID": "docker.io/library/import-2023-06-15@sha256:ce2145a147b3f1fc440ba15eaa91b879ba9cbf929c8dd8f3190868f4373f2183",
                        "containerID": "containerd://43e81c361a653d34ab65e224f12ddcdf0b978c1caf1a74eb65dc41fd82ac13ae",
                        "started": true
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-proxy-spw78",
                "generateName": "kube-proxy-",
                "namespace": "kube-system",
                "uid": "e39c7948-da47-4e84-b058-6b0c2ff89c6b",
                "resourceVersion": "481",
                "creationTimestamp": "2025-10-03T07:54:27Z",
                "labels": {
                    "controller-revision-hash": "56999f657b",
                    "k8s-app": "kube-proxy",
                    "pod-template-generation": "1"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "apps/v1",
                        "kind": "DaemonSet",
                        "name": "kube-proxy",
                        "uid": "2ea4d34c-1985-49b6-b67e-346db9dab180",
                        "controller": true,
                        "blockOwnerDeletion": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kube-proxy",
                        "configMap": {
                            "name": "kube-proxy",
                            "defaultMode": 420
                        }
                    },
                    {
                        "name": "xtables-lock",
                        "hostPath": {
                            "path": "/run/xtables.lock",
                            "type": "FileOrCreate"
                        }
                    },
                    {
                        "name": "lib-modules",
                        "hostPath": {
                            "path": "/lib/modules",
                            "type": ""
                        }
                    },
                    {
                        "name": "kube-api-access-4k997",
                        "projected": {
                            "sources": [
                                {
                                    "serviceAccountToken": {
                                        "expirationSeconds": 3607,
                                        "path": "token"
                                    }
                                },
                                {
                                    "configMap": {
                                        "name": "kube-root-ca.crt",
                                        "items": [
                                            {
                                                "key": "ca.crt",
                                                "path": "ca.crt"
                                            }
                                        ]
                                    }
                                },
                                {
                                    "downwardAPI": {
                                        "items": [
                                            {
                                                "path": "namespace",
                                                "fieldRef": {
                                                    "apiVersion": "v1",
                                                    "fieldPath": "metadata.namespace"
                                                }
                                            }
                                        ]
                                    }
                                }
                            ],
                            "defaultMode": 420
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-proxy",
                        "image": "registry.k8s.io/kube-proxy:v1.27.3",
                        "command": [
                            "/usr/local/bin/kube-proxy",
                            "--config=/var/lib/kube-proxy/config.conf",
                            "--hostname-override=$(NODE_NAME)"
                        ],
                        "env": [
                            {
                                "name": "NODE_NAME",
                                "valueFrom": {
                                    "fieldRef": {
                                        "apiVersion": "v1",
                                        "fieldPath": "spec.nodeName"
                                    }
                                }
                            }
                        ],
                        "resources": {},
                        "volumeMounts": [
                            {
                                "name": "kube-proxy",
                                "mountPath": "/var/lib/kube-proxy"
                            },
                            {
                                "name": "xtables-lock",
                                "mountPath": "/run/xtables.lock"
                            },
                            {
                                "name": "lib-modules",
                                "readOnly": true,
                                "mountPath": "/lib/modules"
                            },
                            {
                                "name": "kube-api-access-4k997",
                                "readOnly": true,
                                "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
                            }
                        ],
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent",
                        "securityContext": {
                            "privileged": true
                        }
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeSelector": {
                    "kubernetes.io/os": "linux"
                },
                "serviceAccountName": "kube-proxy",
                "serviceAccount": "kube-proxy",
                "nodeName": "lab-cluster-worker2",
                "hostNetwork": true,
                "securityContext": {},
                "affinity": {
                    "nodeAffinity": {
                        "requiredDuringSchedulingIgnoredDuringExecution": {
                            "nodeSelectorTerms": [
                                {
                                    "matchFields": [
                                        {
                                            "key": "metadata.name",
                                            "operator": "In",
                                            "values": [
                                                "lab-cluster-worker2"
                                            ]
                                        }
                                    ]
                                }
                            ]
                        }
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists"
                    },
                    {
                        "key": "node.kubernetes.io/not-ready",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/unreachable",
                        "operator": "Exists",
                        "effect": "NoExecute"
                    },
                    {
                        "key": "node.kubernetes.io/disk-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/memory-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/pid-pressure",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/unschedulable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    },
                    {
                        "key": "node.kubernetes.io/network-unavailable",
                        "operator": "Exists",
                        "effect": "NoSchedule"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Pending",
                "conditions": [
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:27Z"
                    }
                ],
                "qosClass": "BestEffort"
            }
        },
        {
            "metadata": {
                "name": "kube-scheduler-lab-cluster-control-plane",
                "namespace": "kube-system",
                "uid": "f7e1fe82-4c8a-4450-a80e-2d4185108d26",
                "resourceVersion": "304",
                "creationTimestamp": "2025-10-03T07:54:09Z",
                "labels": {
                    "component": "kube-scheduler",
                    "tier": "control-plane"
                },
                "annotations": {
                    "kubernetes.io/config.hash": "22d29c84074283e84e9eb05cfc27e108",
                    "kubernetes.io/config.mirror": "22d29c84074283e84e9eb05cfc27e108",
                    "kubernetes.io/config.seen": "2025-10-03T07:54:09.059416429Z",
                    "kubernetes.io/config.source": "file"
                },
                "ownerReferences": [
                    {
                        "apiVersion": "v1",
                        "kind": "Node",
                        "name": "lab-cluster-control-plane",
                        "uid": "13198dd4-40a3-4433-ab80-7fc2fabcf1d6",
                        "controller": true
                    }
                ]
            },
            "spec": {
                "volumes": [
                    {
                        "name": "kubeconfig",
                        "hostPath": {
                            "path": "/etc/kubernetes/scheduler.conf",
                            "type": "FileOrCreate"
                        }
                    }
                ],
                "containers": [
                    {
                        "name": "kube-scheduler",
                        "image": "registry.k8s.io/kube-scheduler:v1.27.3",
                        "command": [
                            "kube-scheduler",
                            "--authentication-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--authorization-kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--bind-address=127.0.0.1",
                            "--kubeconfig=/etc/kubernetes/scheduler.conf",
                            "--leader-elect=true"
                        ],
                        "resources": {
                            "requests": {
                                "cpu": "100m"
                            }
                        },
                        "volumeMounts": [
                            {
                                "name": "kubeconfig",
                                "readOnly": true,
                                "mountPath": "/etc/kubernetes/scheduler.conf"
                            }
                        ],
                        "livenessProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 8
                        },
                        "startupProbe": {
                            "httpGet": {
                                "path": "/healthz",
                                "port": 10259,
                                "host": "127.0.0.1",
                                "scheme": "HTTPS"
                            },
                            "initialDelaySeconds": 10,
                            "timeoutSeconds": 15,
                            "periodSeconds": 10,
                            "successThreshold": 1,
                            "failureThreshold": 24
                        },
                        "terminationMessagePath": "/dev/termination-log",
                        "terminationMessagePolicy": "File",
                        "imagePullPolicy": "IfNotPresent"
                    }
                ],
                "restartPolicy": "Always",
                "terminationGracePeriodSeconds": 30,
                "dnsPolicy": "ClusterFirst",
                "nodeName": "lab-cluster-control-plane",
                "hostNetwork": true,
                "securityContext": {
                    "seccompProfile": {
                        "type": "RuntimeDefault"
                    }
                },
                "schedulerName": "default-scheduler",
                "tolerations": [
                    {
                        "operator": "Exists",
                        "effect": "NoExecute"
                    }
                ],
                "priorityClassName": "system-node-critical",
                "priority": 2000001000,
                "enableServiceLinks": true,
                "preemptionPolicy": "PreemptLowerPriority"
            },
            "status": {
                "phase": "Running",
                "conditions": [
                    {
                        "type": "Initialized",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:09Z"
                    },
                    {
                        "type": "Ready",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:20Z"
                    },
                    {
                        "type": "ContainersReady",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:20Z"
                    },
                    {
                        "type": "PodScheduled",
                        "status": "True",
                        "lastProbeTime": null,
                        "lastTransitionTime": "2025-10-03T07:54:09Z"
                    }
                ],
                "hostIP": "172.26.0.5",
                "podIP": "172.26.0.5",
                "podIPs": [
                    {
                        "ip": "172.26.0.5"
                    }
                ],
                "startTime": "2025-10-03T07:54:09Z",
                "containerStatuses": [
                    {
                        "name": "kube-scheduler",
                        "state": {
                            "running": {
                                "startedAt": "2025-10-03T07:54:03Z"
                            }
                        },
                        "lastState": {},
                        "ready": true,
                        "restartCount": 0,
                        "image": "registry.k8s.io/kube-scheduler:v1.27.3",
                        "imageID": "docker.io/library/import-2023-06-15@sha256:9d6f903c0d4bf3b145c7bbc68727251ca1abf98aed7f8d2acb9f6a10ac81e8c2",
                        "containerID": "containerd://54f73743cf81859ee6e2b9309e2c0a81ae5f43b909235bd4de58fc82d5d12f7f",
                        "started": true
                    }
                ],
                "qosClass": "Burstable"
            }
        }
    ]
}
==== START logs for container coredns of pod kube-system/coredns-5d78c9869d-f6qvq ====
.:53
[INFO] plugin/reload: Running configuration SHA512 = 591cf328cccc12bc490481273e738df59329c62c0b729d94e8b61db9961c2fa5f046dd37f1cf888b953814040d180f52594972691cd6ff41be96639138a43908
CoreDNS-1.10.1
linux/amd64, go1.20, 055b2c3
==== END logs for container coredns of pod kube-system/coredns-5d78c9869d-f6qvq ====
==== START logs for container coredns of pod kube-system/coredns-5d78c9869d-nt47d ====
.:53
[INFO] plugin/reload: Running configuration SHA512 = 591cf328cccc12bc490481273e738df59329c62c0b729d94e8b61db9961c2fa5f046dd37f1cf888b953814040d180f52594972691cd6ff41be96639138a43908
CoreDNS-1.10.1
linux/amd64, go1.20, 055b2c3
==== END logs for container coredns of pod kube-system/coredns-5d78c9869d-nt47d ====
==== START logs for container etcd of pod kube-system/etcd-lab-cluster-control-plane ====
{"level":"info","ts":"2025-10-03T07:54:04.532Z","caller":"etcdmain/etcd.go:73","msg":"Running: ","args":["etcd","--advertise-client-urls=https://172.26.0.5:2379","--cert-file=/etc/kubernetes/pki/etcd/server.crt","--client-cert-auth=true","--data-dir=/var/lib/etcd","--experimental-initial-corrupt-check=true","--experimental-watch-progress-notify-interval=5s","--initial-advertise-peer-urls=https://172.26.0.5:2380","--initial-cluster=lab-cluster-control-plane=https://172.26.0.5:2380","--key-file=/etc/kubernetes/pki/etcd/server.key","--listen-client-urls=https://127.0.0.1:2379,https://172.26.0.5:2379","--listen-metrics-urls=http://127.0.0.1:2381","--listen-peer-urls=https://172.26.0.5:2380","--name=lab-cluster-control-plane","--peer-cert-file=/etc/kubernetes/pki/etcd/peer.crt","--peer-client-cert-auth=true","--peer-key-file=/etc/kubernetes/pki/etcd/peer.key","--peer-trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt","--snapshot-count=10000","--trusted-ca-file=/etc/kubernetes/pki/etcd/ca.crt"]}
{"level":"info","ts":"2025-10-03T07:54:04.532Z","caller":"embed/etcd.go:124","msg":"configuring peer listeners","listen-peer-urls":["https://172.26.0.5:2380"]}
{"level":"info","ts":"2025-10-03T07:54:04.532Z","caller":"embed/etcd.go:484","msg":"starting with peer TLS","tls-info":"cert = /etc/kubernetes/pki/etcd/peer.crt, key = /etc/kubernetes/pki/etcd/peer.key, client-cert=, client-key=, trusted-ca = /etc/kubernetes/pki/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2025-10-03T07:54:04.533Z","caller":"embed/etcd.go:132","msg":"configuring client listeners","listen-client-urls":["https://127.0.0.1:2379","https://172.26.0.5:2379"]}
{"level":"info","ts":"2025-10-03T07:54:04.533Z","caller":"embed/etcd.go:306","msg":"starting an etcd server","etcd-version":"3.5.7","git-sha":"215b53cf3","go-version":"go1.17.13","go-os":"linux","go-arch":"amd64","max-cpu-set":24,"max-cpu-available":24,"member-initialized":false,"name":"lab-cluster-control-plane","data-dir":"/var/lib/etcd","wal-dir":"","wal-dir-dedicated":"","member-dir":"/var/lib/etcd/member","force-new-cluster":false,"heartbeat-interval":"100ms","election-timeout":"1s","initial-election-tick-advance":true,"snapshot-count":10000,"max-wals":5,"max-snapshots":5,"snapshot-catchup-entries":5000,"initial-advertise-peer-urls":["https://172.26.0.5:2380"],"listen-peer-urls":["https://172.26.0.5:2380"],"advertise-client-urls":["https://172.26.0.5:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://172.26.0.5:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"],"cors":["*"],"host-whitelist":["*"],"initial-cluster":"lab-cluster-control-plane=https://172.26.0.5:2380","initial-cluster-state":"new","initial-cluster-token":"etcd-cluster","quota-backend-bytes":2147483648,"max-request-bytes":1572864,"max-concurrent-streams":4294967295,"pre-vote":true,"initial-corrupt-check":true,"corrupt-check-time-interval":"0s","compact-check-time-enabled":false,"compact-check-time-interval":"1m0s","auto-compaction-mode":"periodic","auto-compaction-retention":"0s","auto-compaction-interval":"0s","discovery-url":"","discovery-proxy":"","downgrade-check-interval":"5s"}
{"level":"info","ts":"2025-10-03T07:54:04.538Z","caller":"etcdserver/backend.go:81","msg":"opened backend db","path":"/var/lib/etcd/member/snap/db","took":"2.800311ms"}
{"level":"info","ts":"2025-10-03T07:54:04.548Z","caller":"etcdserver/raft.go:494","msg":"starting local member","local-member-id":"a6f58ef927040d34","cluster-id":"a4317fba0c5864a1"}
{"level":"info","ts":"2025-10-03T07:54:04.548Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"a6f58ef927040d34 switched to configuration voters=()"}
{"level":"info","ts":"2025-10-03T07:54:04.548Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"a6f58ef927040d34 became follower at term 0"}
{"level":"info","ts":"2025-10-03T07:54:04.548Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"newRaft a6f58ef927040d34 [peers: [], term: 0, commit: 0, applied: 0, lastindex: 0, lastterm: 0]"}
{"level":"info","ts":"2025-10-03T07:54:04.548Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"a6f58ef927040d34 became follower at term 1"}
{"level":"info","ts":"2025-10-03T07:54:04.548Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"a6f58ef927040d34 switched to configuration voters=(12030679180342725940)"}
{"level":"warn","ts":"2025-10-03T07:54:04.551Z","caller":"auth/store.go:1234","msg":"simple token is not cryptographically signed"}
{"level":"info","ts":"2025-10-03T07:54:04.553Z","caller":"mvcc/kvstore.go:393","msg":"kvstore restored","current-rev":1}
{"level":"info","ts":"2025-10-03T07:54:04.555Z","caller":"etcdserver/quota.go:94","msg":"enabled backend quota with default value","quota-name":"v3-applier","quota-size-bytes":2147483648,"quota-size":"2.1 GB"}
{"level":"info","ts":"2025-10-03T07:54:04.556Z","caller":"etcdserver/server.go:854","msg":"starting etcd server","local-member-id":"a6f58ef927040d34","local-server-version":"3.5.7","cluster-version":"to_be_decided"}
{"level":"info","ts":"2025-10-03T07:54:04.556Z","caller":"etcdserver/server.go:738","msg":"started as single-node; fast-forwarding election ticks","local-member-id":"a6f58ef927040d34","forward-ticks":9,"forward-duration":"900ms","election-ticks":10,"election-timeout":"1s"}
{"level":"info","ts":"2025-10-03T07:54:04.556Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/etcd/member/snap","suffix":"snap.db","max":5,"interval":"30s"}
{"level":"info","ts":"2025-10-03T07:54:04.557Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/etcd/member/snap","suffix":"snap","max":5,"interval":"30s"}
{"level":"info","ts":"2025-10-03T07:54:04.557Z","caller":"fileutil/purge.go:44","msg":"started to purge file","dir":"/var/lib/etcd/member/wal","suffix":"wal","max":5,"interval":"30s"}
{"level":"info","ts":"2025-10-03T07:54:04.557Z","caller":"embed/etcd.go:687","msg":"starting with client TLS","tls-info":"cert = /etc/kubernetes/pki/etcd/server.crt, key = /etc/kubernetes/pki/etcd/server.key, client-cert=, client-key=, trusted-ca = /etc/kubernetes/pki/etcd/ca.crt, client-cert-auth = true, crl-file = ","cipher-suites":[]}
{"level":"info","ts":"2025-10-03T07:54:04.557Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"a6f58ef927040d34 switched to configuration voters=(12030679180342725940)"}
{"level":"info","ts":"2025-10-03T07:54:04.557Z","caller":"membership/cluster.go:421","msg":"added member","cluster-id":"a4317fba0c5864a1","local-member-id":"a6f58ef927040d34","added-peer-id":"a6f58ef927040d34","added-peer-peer-urls":["https://172.26.0.5:2380"]}
{"level":"info","ts":"2025-10-03T07:54:04.557Z","caller":"embed/etcd.go:586","msg":"serving peer traffic","address":"172.26.0.5:2380"}
{"level":"info","ts":"2025-10-03T07:54:04.557Z","caller":"embed/etcd.go:558","msg":"cmux::serve","address":"172.26.0.5:2380"}
{"level":"info","ts":"2025-10-03T07:54:04.558Z","caller":"embed/etcd.go:275","msg":"now serving peer/client/metrics","local-member-id":"a6f58ef927040d34","initial-advertise-peer-urls":["https://172.26.0.5:2380"],"listen-peer-urls":["https://172.26.0.5:2380"],"advertise-client-urls":["https://172.26.0.5:2379"],"listen-client-urls":["https://127.0.0.1:2379","https://172.26.0.5:2379"],"listen-metrics-urls":["http://127.0.0.1:2381"]}
{"level":"info","ts":"2025-10-03T07:54:04.558Z","caller":"embed/etcd.go:762","msg":"serving metrics","address":"http://127.0.0.1:2381"}
{"level":"info","ts":"2025-10-03T07:54:04.748Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"a6f58ef927040d34 is starting a new election at term 1"}
{"level":"info","ts":"2025-10-03T07:54:04.749Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"a6f58ef927040d34 became pre-candidate at term 1"}
{"level":"info","ts":"2025-10-03T07:54:04.749Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"a6f58ef927040d34 received MsgPreVoteResp from a6f58ef927040d34 at term 1"}
{"level":"info","ts":"2025-10-03T07:54:04.749Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"a6f58ef927040d34 became candidate at term 2"}
{"level":"info","ts":"2025-10-03T07:54:04.749Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"a6f58ef927040d34 received MsgVoteResp from a6f58ef927040d34 at term 2"}
{"level":"info","ts":"2025-10-03T07:54:04.749Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"a6f58ef927040d34 became leader at term 2"}
{"level":"info","ts":"2025-10-03T07:54:04.749Z","logger":"raft","caller":"etcdserver/zap_raft.go:77","msg":"raft.node: a6f58ef927040d34 elected leader a6f58ef927040d34 at term 2"}
{"level":"info","ts":"2025-10-03T07:54:04.750Z","caller":"etcdserver/server.go:2062","msg":"published local member to cluster through raft","local-member-id":"a6f58ef927040d34","local-member-attributes":"{Name:lab-cluster-control-plane ClientURLs:[https://172.26.0.5:2379]}","request-path":"/0/members/a6f58ef927040d34/attributes","cluster-id":"a4317fba0c5864a1","publish-timeout":"7s"}
{"level":"info","ts":"2025-10-03T07:54:04.750Z","caller":"embed/serve.go:100","msg":"ready to serve client requests"}
{"level":"info","ts":"2025-10-03T07:54:04.750Z","caller":"etcdserver/server.go:2571","msg":"setting up initial cluster version using v2 API","cluster-version":"3.5"}
{"level":"info","ts":"2025-10-03T07:54:04.750Z","caller":"embed/serve.go:100","msg":"ready to serve client requests"}
{"level":"info","ts":"2025-10-03T07:54:04.751Z","caller":"etcdmain/main.go:44","msg":"notifying init daemon"}
{"level":"info","ts":"2025-10-03T07:54:04.751Z","caller":"etcdmain/main.go:50","msg":"successfully notified init daemon"}
{"level":"info","ts":"2025-10-03T07:54:04.751Z","caller":"embed/serve.go:198","msg":"serving client traffic securely","address":"127.0.0.1:2379"}
{"level":"info","ts":"2025-10-03T07:54:04.751Z","caller":"embed/serve.go:198","msg":"serving client traffic securely","address":"172.26.0.5:2379"}
{"level":"info","ts":"2025-10-03T07:54:04.751Z","caller":"membership/cluster.go:584","msg":"set initial cluster version","cluster-id":"a4317fba0c5864a1","local-member-id":"a6f58ef927040d34","cluster-version":"3.5"}
{"level":"info","ts":"2025-10-03T07:54:04.752Z","caller":"api/capability.go:75","msg":"enabled capabilities for version","cluster-version":"3.5"}
{"level":"info","ts":"2025-10-03T07:54:04.752Z","caller":"etcdserver/server.go:2595","msg":"cluster version is updated","cluster-version":"3.5"}
==== END logs for container etcd of pod kube-system/etcd-lab-cluster-control-plane ====
==== START logs for container kindnet-cni of pod kube-system/kindnet-24bgg ====
Request log error: the server could not find the requested resource (get pods kindnet-24bgg)
==== END logs for container kindnet-cni of pod kube-system/kindnet-24bgg ====
==== START logs for container kindnet-cni of pod kube-system/kindnet-2tkf7 ====
I1003 07:54:25.345182       1 main.go:316] probe TCP address lab-cluster-control-plane:6443
I1003 07:54:25.346210       1 main.go:102] connected to apiserver: https://lab-cluster-control-plane:6443
I1003 07:54:25.346239       1 main.go:107] hostIP = 172.26.0.5
podIP = 172.26.0.5
I1003 07:54:25.346320       1 main.go:116] setting mtu 1500 for CNI 
I1003 07:54:25.346351       1 main.go:146] kindnetd IP family: "ipv4"
I1003 07:54:25.346364       1 main.go:150] noMask IPv4 subnets: [10.244.0.0/16]
I1003 07:54:25.685081       1 main.go:223] Handling node with IPs: map[172.26.0.5:{}]
I1003 07:54:25.685125       1 main.go:227] handling current node
I1003 07:54:25.708424       1 main.go:223] Handling node with IPs: map[172.26.0.6:{}]
I1003 07:54:25.708479       1 main.go:250] Node lab-cluster-worker has CIDR [10.244.1.0/24] 
I1003 07:54:25.708615       1 routes.go:62] Adding route {Ifindex: 0 Dst: 10.244.1.0/24 Src: <nil> Gw: 172.26.0.6 Flags: [] Table: 0} 
==== END logs for container kindnet-cni of pod kube-system/kindnet-2tkf7 ====
==== START logs for container kindnet-cni of pod kube-system/kindnet-pb8dl ====
I1003 07:54:28.331334       1 main.go:316] probe TCP address lab-cluster-control-plane:6443
I1003 07:54:28.432946       1 main.go:102] connected to apiserver: https://lab-cluster-control-plane:6443
I1003 07:54:28.432983       1 main.go:107] hostIP = 172.26.0.6
podIP = 172.26.0.6
I1003 07:54:28.433066       1 main.go:116] setting mtu 1500 for CNI 
I1003 07:54:28.433073       1 main.go:146] kindnetd IP family: "ipv4"
I1003 07:54:28.433079       1 main.go:150] noMask IPv4 subnets: [10.244.0.0/16]
I1003 07:54:28.643493       1 main.go:223] Handling node with IPs: map[172.26.0.5:{}]
I1003 07:54:28.643541       1 main.go:250] Node lab-cluster-control-plane has CIDR [10.244.0.0/24] 
I1003 07:54:28.787460       1 routes.go:62] Adding route {Ifindex: 0 Dst: 10.244.0.0/24 Src: <nil> Gw: 172.26.0.5 Flags: [] Table: 0} 
I1003 07:54:28.787613       1 main.go:223] Handling node with IPs: map[172.26.0.6:{}]
I1003 07:54:28.787624       1 main.go:227] handling current node
I1003 07:54:28.811081       1 main.go:223] Handling node with IPs: map[172.26.0.7:{}]
I1003 07:54:28.811121       1 main.go:250] Node lab-cluster-worker2 has CIDR [10.244.2.0/24] 
I1003 07:54:28.811221       1 routes.go:62] Adding route {Ifindex: 0 Dst: 10.244.2.0/24 Src: <nil> Gw: 172.26.0.7 Flags: [] Table: 0} 
==== END logs for container kindnet-cni of pod kube-system/kindnet-pb8dl ====
==== START logs for container kube-apiserver of pod kube-system/kube-apiserver-lab-cluster-control-plane ====
I1003 07:54:03.834233       1 server.go:553] external host was not specified, using 172.26.0.5
I1003 07:54:03.835138       1 server.go:166] Version: v1.27.3
I1003 07:54:03.835170       1 server.go:168] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I1003 07:54:03.946826       1 shared_informer.go:311] Waiting for caches to sync for node_authorizer
I1003 07:54:03.959317       1 plugins.go:158] Loaded 12 mutating admission controller(s) successfully in the following order: NamespaceLifecycle,LimitRanger,ServiceAccount,NodeRestriction,TaintNodesByCondition,Priority,DefaultTolerationSeconds,DefaultStorageClass,StorageObjectInUseProtection,RuntimeClass,DefaultIngressClass,MutatingAdmissionWebhook.
I1003 07:54:03.959336       1 plugins.go:161] Loaded 13 validating admission controller(s) successfully in the following order: LimitRanger,ServiceAccount,PodSecurity,Priority,PersistentVolumeClaimResize,RuntimeClass,CertificateApproval,CertificateSigning,ClusterTrustBundleAttest,CertificateSubjectRestriction,ValidatingAdmissionPolicy,ValidatingAdmissionWebhook,ResourceQuota.
W1003 07:54:03.964623       1 logging.go:59] [core] [Channel #1 SubChannel #2] grpc: addrConn.createTransport failed to connect to {
  "Addr": "127.0.0.1:2379",
  "ServerName": "127.0.0.1",
  "Attributes": null,
  "BalancerAttributes": null,
  "Type": 0,
  "Metadata": null
}. Err: connection error: desc = "transport: Error while dialing dial tcp 127.0.0.1:2379: connect: connection refused"
I1003 07:54:04.974717       1 handler.go:232] Adding GroupVersion apiextensions.k8s.io v1 to ResourceManager
W1003 07:54:04.974753       1 genericapiserver.go:752] Skipping API apiextensions.k8s.io/v1beta1 because it has no resources.
I1003 07:54:04.975568       1 instance.go:282] Using reconciler: lease
I1003 07:54:05.076082       1 handler.go:232] Adding GroupVersion  v1 to ResourceManager
I1003 07:54:05.076375       1 instance.go:651] API group "internal.apiserver.k8s.io" is not enabled, skipping.
I1003 07:54:05.275454       1 instance.go:651] API group "resource.k8s.io" is not enabled, skipping.
I1003 07:54:05.284724       1 handler.go:232] Adding GroupVersion authentication.k8s.io v1 to ResourceManager
W1003 07:54:05.284762       1 genericapiserver.go:752] Skipping API authentication.k8s.io/v1beta1 because it has no resources.
W1003 07:54:05.284768       1 genericapiserver.go:752] Skipping API authentication.k8s.io/v1alpha1 because it has no resources.
I1003 07:54:05.286010       1 handler.go:232] Adding GroupVersion authorization.k8s.io v1 to ResourceManager
W1003 07:54:05.286038       1 genericapiserver.go:752] Skipping API authorization.k8s.io/v1beta1 because it has no resources.
I1003 07:54:05.287447       1 handler.go:232] Adding GroupVersion autoscaling v2 to ResourceManager
I1003 07:54:05.287847       1 handler.go:232] Adding GroupVersion autoscaling v1 to ResourceManager
W1003 07:54:05.287876       1 genericapiserver.go:752] Skipping API autoscaling/v2beta1 because it has no resources.
W1003 07:54:05.287879       1 genericapiserver.go:752] Skipping API autoscaling/v2beta2 because it has no resources.
I1003 07:54:05.289622       1 handler.go:232] Adding GroupVersion batch v1 to ResourceManager
W1003 07:54:05.289652       1 genericapiserver.go:752] Skipping API batch/v1beta1 because it has no resources.
I1003 07:54:05.291083       1 handler.go:232] Adding GroupVersion certificates.k8s.io v1 to ResourceManager
W1003 07:54:05.291112       1 genericapiserver.go:752] Skipping API certificates.k8s.io/v1beta1 because it has no resources.
W1003 07:54:05.291116       1 genericapiserver.go:752] Skipping API certificates.k8s.io/v1alpha1 because it has no resources.
I1003 07:54:05.292354       1 handler.go:232] Adding GroupVersion coordination.k8s.io v1 to ResourceManager
W1003 07:54:05.292382       1 genericapiserver.go:752] Skipping API coordination.k8s.io/v1beta1 because it has no resources.
W1003 07:54:05.293376       1 genericapiserver.go:752] Skipping API discovery.k8s.io/v1beta1 because it has no resources.
I1003 07:54:05.293740       1 handler.go:232] Adding GroupVersion discovery.k8s.io v1 to ResourceManager
I1003 07:54:05.296181       1 handler.go:232] Adding GroupVersion networking.k8s.io v1 to ResourceManager
W1003 07:54:05.296213       1 genericapiserver.go:752] Skipping API networking.k8s.io/v1beta1 because it has no resources.
W1003 07:54:05.296219       1 genericapiserver.go:752] Skipping API networking.k8s.io/v1alpha1 because it has no resources.
I1003 07:54:05.297856       1 handler.go:232] Adding GroupVersion node.k8s.io v1 to ResourceManager
W1003 07:54:05.297885       1 genericapiserver.go:752] Skipping API node.k8s.io/v1beta1 because it has no resources.
W1003 07:54:05.297888       1 genericapiserver.go:752] Skipping API node.k8s.io/v1alpha1 because it has no resources.
I1003 07:54:05.299749       1 handler.go:232] Adding GroupVersion policy v1 to ResourceManager
W1003 07:54:05.299777       1 genericapiserver.go:752] Skipping API policy/v1beta1 because it has no resources.
I1003 07:54:05.302315       1 handler.go:232] Adding GroupVersion rbac.authorization.k8s.io v1 to ResourceManager
W1003 07:54:05.302346       1 genericapiserver.go:752] Skipping API rbac.authorization.k8s.io/v1beta1 because it has no resources.
W1003 07:54:05.302350       1 genericapiserver.go:752] Skipping API rbac.authorization.k8s.io/v1alpha1 because it has no resources.
I1003 07:54:05.303937       1 handler.go:232] Adding GroupVersion scheduling.k8s.io v1 to ResourceManager
W1003 07:54:05.303967       1 genericapiserver.go:752] Skipping API scheduling.k8s.io/v1beta1 because it has no resources.
W1003 07:54:05.303971       1 genericapiserver.go:752] Skipping API scheduling.k8s.io/v1alpha1 because it has no resources.
I1003 07:54:05.306986       1 handler.go:232] Adding GroupVersion storage.k8s.io v1 to ResourceManager
W1003 07:54:05.307036       1 genericapiserver.go:752] Skipping API storage.k8s.io/v1beta1 because it has no resources.
W1003 07:54:05.307041       1 genericapiserver.go:752] Skipping API storage.k8s.io/v1alpha1 because it has no resources.
I1003 07:54:05.309314       1 handler.go:232] Adding GroupVersion flowcontrol.apiserver.k8s.io v1beta3 to ResourceManager
I1003 07:54:05.310306       1 handler.go:232] Adding GroupVersion flowcontrol.apiserver.k8s.io v1beta2 to ResourceManager
W1003 07:54:05.310334       1 genericapiserver.go:752] Skipping API flowcontrol.apiserver.k8s.io/v1beta1 because it has no resources.
W1003 07:54:05.310338       1 genericapiserver.go:752] Skipping API flowcontrol.apiserver.k8s.io/v1alpha1 because it has no resources.
I1003 07:54:05.315174       1 handler.go:232] Adding GroupVersion apps v1 to ResourceManager
W1003 07:54:05.315204       1 genericapiserver.go:752] Skipping API apps/v1beta2 because it has no resources.
W1003 07:54:05.315209       1 genericapiserver.go:752] Skipping API apps/v1beta1 because it has no resources.
I1003 07:54:05.317355       1 handler.go:232] Adding GroupVersion admissionregistration.k8s.io v1 to ResourceManager
W1003 07:54:05.317393       1 genericapiserver.go:752] Skipping API admissionregistration.k8s.io/v1beta1 because it has no resources.
W1003 07:54:05.317397       1 genericapiserver.go:752] Skipping API admissionregistration.k8s.io/v1alpha1 because it has no resources.
I1003 07:54:05.319274       1 handler.go:232] Adding GroupVersion events.k8s.io v1 to ResourceManager
W1003 07:54:05.319303       1 genericapiserver.go:752] Skipping API events.k8s.io/v1beta1 because it has no resources.
I1003 07:54:05.360180       1 handler.go:232] Adding GroupVersion apiregistration.k8s.io v1 to ResourceManager
W1003 07:54:05.360226       1 genericapiserver.go:752] Skipping API apiregistration.k8s.io/v1beta1 because it has no resources.
I1003 07:54:05.759117       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I1003 07:54:05.759130       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I1003 07:54:05.759494       1 dynamic_serving_content.go:132] "Starting controller" name="serving-cert::/etc/kubernetes/pki/apiserver.crt::/etc/kubernetes/pki/apiserver.key"
I1003 07:54:05.759863       1 secure_serving.go:210] Serving securely on [::]:6443
I1003 07:54:05.759902       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I1003 07:54:05.759972       1 apf_controller.go:361] Starting API Priority and Fairness config controller
I1003 07:54:05.760048       1 available_controller.go:423] Starting AvailableConditionController
I1003 07:54:05.760077       1 cache.go:32] Waiting for caches to sync for AvailableConditionController controller
I1003 07:54:05.760098       1 aggregator.go:150] waiting for initial CRD sync...
I1003 07:54:05.760109       1 controller.go:83] Starting OpenAPI AggregationController
I1003 07:54:05.760110       1 gc_controller.go:78] Starting apiserver lease garbage collector
I1003 07:54:05.760115       1 system_namespaces_controller.go:67] Starting system namespaces controller
I1003 07:54:05.760136       1 controller.go:80] Starting OpenAPI V3 AggregationController
I1003 07:54:05.760194       1 crdregistration_controller.go:111] Starting crd-autoregister controller
I1003 07:54:05.760204       1 shared_informer.go:311] Waiting for caches to sync for crd-autoregister
I1003 07:54:05.760208       1 controller.go:85] Starting OpenAPI controller
I1003 07:54:05.760225       1 apiservice_controller.go:97] Starting APIServiceRegistrationController
I1003 07:54:05.760229       1 cache.go:32] Waiting for caches to sync for APIServiceRegistrationController controller
I1003 07:54:05.760293       1 dynamic_serving_content.go:132] "Starting controller" name="aggregator-proxy-cert::/etc/kubernetes/pki/front-proxy-client.crt::/etc/kubernetes/pki/front-proxy-client.key"
I1003 07:54:05.760380       1 handler_discovery.go:392] Starting ResourceDiscoveryManager
I1003 07:54:05.760326       1 customresource_discovery_controller.go:289] Starting DiscoveryController
I1003 07:54:05.760426       1 controller.go:121] Starting legacy_token_tracking_controller
I1003 07:54:05.760461       1 shared_informer.go:311] Waiting for caches to sync for configmaps
I1003 07:54:05.760536       1 cluster_authentication_trust_controller.go:440] Starting cluster_authentication_trust_controller controller
I1003 07:54:05.760576       1 shared_informer.go:311] Waiting for caches to sync for cluster_authentication_trust_controller
I1003 07:54:05.760596       1 apiapproval_controller.go:186] Starting KubernetesAPIApprovalPolicyConformantConditionController
I1003 07:54:05.760613       1 crd_finalizer.go:266] Starting CRDFinalizer
I1003 07:54:05.760639       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I1003 07:54:05.760664       1 nonstructuralschema_controller.go:192] Starting NonStructuralSchemaConditionController
I1003 07:54:05.760735       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I1003 07:54:05.760809       1 establishing_controller.go:76] Starting EstablishingController
I1003 07:54:05.761180       1 gc_controller.go:78] Starting apiserver lease garbage collector
I1003 07:54:05.760751       1 controller.go:85] Starting OpenAPI V3 controller
I1003 07:54:05.760764       1 naming_controller.go:291] Starting NamingConditionController
E1003 07:54:05.823832       1 controller.go:146] "Failed to ensure lease exists, will retry" err="namespaces \"kube-system\" not found" interval="200ms"
I1003 07:54:05.848034       1 shared_informer.go:318] Caches are synced for node_authorizer
I1003 07:54:05.860586       1 cache.go:39] Caches are synced for AvailableConditionController controller
I1003 07:54:05.860631       1 shared_informer.go:318] Caches are synced for crd-autoregister
I1003 07:54:05.860617       1 cache.go:39] Caches are synced for APIServiceRegistrationController controller
I1003 07:54:05.860650       1 aggregator.go:152] initial CRD sync complete...
I1003 07:54:05.860666       1 autoregister_controller.go:141] Starting autoregister controller
I1003 07:54:05.860670       1 cache.go:32] Waiting for caches to sync for autoregister controller
I1003 07:54:05.860675       1 cache.go:39] Caches are synced for autoregister controller
I1003 07:54:05.860693       1 shared_informer.go:318] Caches are synced for configmaps
I1003 07:54:05.860894       1 shared_informer.go:318] Caches are synced for cluster_authentication_trust_controller
I1003 07:54:05.860897       1 apf_controller.go:366] Running API Priority and Fairness config worker
I1003 07:54:05.860946       1 apf_controller.go:369] Running API Priority and Fairness periodic rebalancing process
I1003 07:54:05.862160       1 controller.go:624] quota admission added evaluator for: namespaces
I1003 07:54:06.025668       1 controller.go:624] quota admission added evaluator for: leases.coordination.k8s.io
I1003 07:54:06.593541       1 controller.go:132] OpenAPI AggregationController: action for item k8s_internal_local_delegation_chain_0000000000: Nothing (removed from the queue).
I1003 07:54:06.764926       1 storage_scheduling.go:95] created PriorityClass system-node-critical with value 2000001000
I1003 07:54:06.768218       1 storage_scheduling.go:95] created PriorityClass system-cluster-critical with value 2000000000
I1003 07:54:06.768256       1 storage_scheduling.go:111] all system priority classes are created successfully or already exist.
I1003 07:54:07.164017       1 controller.go:624] quota admission added evaluator for: roles.rbac.authorization.k8s.io
I1003 07:54:07.198103       1 controller.go:624] quota admission added evaluator for: rolebindings.rbac.authorization.k8s.io
I1003 07:54:07.280663       1 alloc.go:330] "allocated clusterIPs" service="default/kubernetes" clusterIPs=map[IPv4:10.96.0.1]
W1003 07:54:07.286709       1 lease.go:251] Resetting endpoints for master service "kubernetes" to [172.26.0.5]
I1003 07:54:07.287533       1 controller.go:624] quota admission added evaluator for: endpoints
I1003 07:54:07.291067       1 controller.go:624] quota admission added evaluator for: endpointslices.discovery.k8s.io
I1003 07:54:09.005500       1 controller.go:624] quota admission added evaluator for: serviceaccounts
I1003 07:54:09.011089       1 controller.go:624] quota admission added evaluator for: deployments.apps
I1003 07:54:09.019835       1 alloc.go:330] "allocated clusterIPs" service="kube-system/kube-dns" clusterIPs=map[IPv4:10.96.0.10]
I1003 07:54:09.026253       1 controller.go:624] quota admission added evaluator for: daemonsets.apps
I1003 07:54:22.813263       1 controller.go:624] quota admission added evaluator for: controllerrevisions.apps
I1003 07:54:22.912674       1 controller.go:624] quota admission added evaluator for: replicasets.apps
==== END logs for container kube-apiserver of pod kube-system/kube-apiserver-lab-cluster-control-plane ====
==== START logs for container kube-controller-manager of pod kube-system/kube-controller-manager-lab-cluster-control-plane ====
I1003 07:54:04.057885       1 serving.go:348] Generated self-signed cert in-memory
I1003 07:54:04.418484       1 controllermanager.go:187] "Starting" version="v1.27.3"
I1003 07:54:04.418521       1 controllermanager.go:189] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I1003 07:54:04.419353       1 dynamic_cafile_content.go:157] "Starting controller" name="request-header::/etc/kubernetes/pki/front-proxy-ca.crt"
I1003 07:54:04.419385       1 dynamic_cafile_content.go:157] "Starting controller" name="client-ca-bundle::/etc/kubernetes/pki/ca.crt"
I1003 07:54:04.420672       1 secure_serving.go:210] Serving securely on 127.0.0.1:10257
I1003 07:54:04.420719       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
I1003 07:54:04.420854       1 leaderelection.go:245] attempting to acquire leader lease kube-system/kube-controller-manager...
E1003 07:54:05.769591       1 leaderelection.go:327] error retrieving resource lock kube-system/kube-controller-manager: leases.coordination.k8s.io "kube-controller-manager" is forbidden: User "system:kube-controller-manager" cannot get resource "leases" in API group "coordination.k8s.io" in the namespace "kube-system"
I1003 07:54:09.062128       1 leaderelection.go:255] successfully acquired lease kube-system/kube-controller-manager
I1003 07:54:09.062305       1 event.go:307] "Event occurred" object="kube-system/kube-controller-manager" fieldPath="" kind="Lease" apiVersion="coordination.k8s.io/v1" type="Normal" reason="LeaderElection" message="lab-cluster-control-plane_64e1a58f-aa1e-424f-bfcb-560f171cb5ce became leader"
I1003 07:54:09.068209       1 shared_informer.go:311] Waiting for caches to sync for tokens
I1003 07:54:09.074766       1 controllermanager.go:638] "Started controller" controller="serviceaccount"
I1003 07:54:09.074790       1 serviceaccounts_controller.go:111] "Starting service account controller"
I1003 07:54:09.074804       1 shared_informer.go:311] Waiting for caches to sync for service account
I1003 07:54:09.081351       1 controllermanager.go:638] "Started controller" controller="cronjob"
I1003 07:54:09.081483       1 cronjob_controllerv2.go:139] "Starting cronjob controller v2"
I1003 07:54:09.081508       1 shared_informer.go:311] Waiting for caches to sync for cronjob
I1003 07:54:09.087365       1 controllermanager.go:638] "Started controller" controller="endpoint"
I1003 07:54:09.087430       1 endpoints_controller.go:172] Starting endpoint controller
I1003 07:54:09.087441       1 shared_informer.go:311] Waiting for caches to sync for endpoint
I1003 07:54:09.092670       1 controllermanager.go:638] "Started controller" controller="endpointslicemirroring"
I1003 07:54:09.092730       1 endpointslicemirroring_controller.go:211] Starting EndpointSliceMirroring controller
I1003 07:54:09.092737       1 shared_informer.go:311] Waiting for caches to sync for endpoint_slice_mirroring
I1003 07:54:09.098194       1 controllermanager.go:638] "Started controller" controller="statefulset"
I1003 07:54:09.098328       1 stateful_set.go:161] "Starting stateful set controller"
I1003 07:54:09.098351       1 shared_informer.go:311] Waiting for caches to sync for stateful set
I1003 07:54:09.103630       1 node_lifecycle_controller.go:431] "Controller will reconcile labels"
I1003 07:54:09.103678       1 controllermanager.go:638] "Started controller" controller="nodelifecycle"
I1003 07:54:09.103765       1 node_lifecycle_controller.go:465] "Sending events to api server"
I1003 07:54:09.103812       1 node_lifecycle_controller.go:476] "Starting node controller"
I1003 07:54:09.103831       1 shared_informer.go:311] Waiting for caches to sync for taint
I1003 07:54:09.168589       1 shared_informer.go:318] Caches are synced for tokens
I1003 07:54:19.115729       1 range_allocator.go:111] "No Secondary Service CIDR provided. Skipping filtering out secondary service addresses"
I1003 07:54:19.115772       1 controllermanager.go:638] "Started controller" controller="nodeipam"
I1003 07:54:19.115845       1 node_ipam_controller.go:162] "Starting ipam controller"
I1003 07:54:19.115869       1 shared_informer.go:311] Waiting for caches to sync for node
I1003 07:54:19.121414       1 controllermanager.go:638] "Started controller" controller="clusterrole-aggregation"
I1003 07:54:19.121468       1 clusterroleaggregation_controller.go:189] "Starting ClusterRoleAggregator controller"
I1003 07:54:19.121479       1 shared_informer.go:311] Waiting for caches to sync for ClusterRoleAggregator
I1003 07:54:19.126244       1 controllermanager.go:638] "Started controller" controller="replicationcontroller"
I1003 07:54:19.126403       1 replica_set.go:201] "Starting controller" name="replicationcontroller"
I1003 07:54:19.126436       1 shared_informer.go:311] Waiting for caches to sync for ReplicationController
I1003 07:54:19.131926       1 controllermanager.go:638] "Started controller" controller="daemonset"
I1003 07:54:19.132048       1 daemon_controller.go:291] "Starting daemon sets controller"
I1003 07:54:19.132071       1 shared_informer.go:311] Waiting for caches to sync for daemon sets
I1003 07:54:19.137096       1 controllermanager.go:638] "Started controller" controller="deployment"
I1003 07:54:19.137134       1 deployment_controller.go:168] "Starting controller" controller="deployment"
I1003 07:54:19.137157       1 shared_informer.go:311] Waiting for caches to sync for deployment
I1003 07:54:19.143465       1 controllermanager.go:638] "Started controller" controller="replicaset"
I1003 07:54:19.143503       1 replica_set.go:201] "Starting controller" name="replicaset"
I1003 07:54:19.143511       1 shared_informer.go:311] Waiting for caches to sync for ReplicaSet
I1003 07:54:19.150744       1 controllermanager.go:638] "Started controller" controller="disruption"
I1003 07:54:19.150872       1 disruption.go:423] Sending events to api server.
I1003 07:54:19.151006       1 disruption.go:434] Starting disruption controller
I1003 07:54:19.151038       1 shared_informer.go:311] Waiting for caches to sync for disruption
I1003 07:54:19.157394       1 controllermanager.go:638] "Started controller" controller="bootstrapsigner"
I1003 07:54:19.157502       1 shared_informer.go:311] Waiting for caches to sync for bootstrap_signer
I1003 07:54:19.162793       1 controllermanager.go:638] "Started controller" controller="podgc"
I1003 07:54:19.162891       1 gc_controller.go:103] Starting GC controller
I1003 07:54:19.162914       1 shared_informer.go:311] Waiting for caches to sync for GC
I1003 07:54:19.262628       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="cronjobs.batch"
I1003 07:54:19.262690       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="ingresses.networking.k8s.io"
I1003 07:54:19.262704       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="poddisruptionbudgets.policy"
I1003 07:54:19.262746       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="serviceaccounts"
I1003 07:54:19.262761       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="controllerrevisions.apps"
I1003 07:54:19.262779       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="podtemplates"
I1003 07:54:19.262811       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="networkpolicies.networking.k8s.io"
I1003 07:54:19.262860       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="horizontalpodautoscalers.autoscaling"
I1003 07:54:19.262886       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="jobs.batch"
I1003 07:54:19.262901       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="endpoints"
I1003 07:54:19.262917       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="daemonsets.apps"
I1003 07:54:19.262926       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="replicasets.apps"
I1003 07:54:19.262954       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="rolebindings.rbac.authorization.k8s.io"
I1003 07:54:19.262992       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="leases.coordination.k8s.io"
I1003 07:54:19.263006       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="endpointslices.discovery.k8s.io"
I1003 07:54:19.263028       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="deployments.apps"
I1003 07:54:19.263040       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="roles.rbac.authorization.k8s.io"
I1003 07:54:19.263049       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="statefulsets.apps"
I1003 07:54:19.263061       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="csistoragecapacities.storage.k8s.io"
I1003 07:54:19.263097       1 resource_quota_monitor.go:223] "QuotaMonitor created object count evaluator" resource="limitranges"
I1003 07:54:19.263126       1 controllermanager.go:638] "Started controller" controller="resourcequota"
I1003 07:54:19.263147       1 core.go:228] "Warning: configure-cloud-routes is set, but no cloud provider specified. Will not configure cloud provider routes."
I1003 07:54:19.263152       1 controllermanager.go:616] "Warning: skipping controller" controller="route"
I1003 07:54:19.263178       1 resource_quota_controller.go:295] "Starting resource quota controller"
I1003 07:54:19.263188       1 shared_informer.go:311] Waiting for caches to sync for resource quota
I1003 07:54:19.263202       1 resource_quota_monitor.go:304] "QuotaMonitor running"
I1003 07:54:19.410675       1 controllermanager.go:638] "Started controller" controller="ttl-after-finished"
I1003 07:54:19.410734       1 ttlafterfinished_controller.go:109] "Starting TTL after finished controller"
I1003 07:54:19.410741       1 shared_informer.go:311] Waiting for caches to sync for TTL after finished
E1003 07:54:19.458964       1 core.go:213] "Failed to start cloud node lifecycle controller" err="no cloud provider provided"
I1003 07:54:19.458994       1 controllermanager.go:616] "Warning: skipping controller" controller="cloud-node-lifecycle"
I1003 07:54:19.610285       1 controllermanager.go:638] "Started controller" controller="persistentvolume-expander"
I1003 07:54:19.610345       1 expand_controller.go:339] "Starting expand controller"
I1003 07:54:19.610363       1 shared_informer.go:311] Waiting for caches to sync for expand
I1003 07:54:19.858662       1 garbagecollector.go:155] "Starting controller" controller="garbagecollector"
I1003 07:54:19.858690       1 shared_informer.go:311] Waiting for caches to sync for garbage collector
I1003 07:54:19.858708       1 graph_builder.go:294] "Running" component="GraphBuilder"
I1003 07:54:19.858691       1 controllermanager.go:638] "Started controller" controller="garbagecollector"
I1003 07:54:20.110414       1 controllermanager.go:638] "Started controller" controller="job"
I1003 07:54:20.110531       1 job_controller.go:202] Starting job controller
I1003 07:54:20.110546       1 shared_informer.go:311] Waiting for caches to sync for job
I1003 07:54:20.261038       1 controllermanager.go:638] "Started controller" controller="csrapproving"
I1003 07:54:20.261061       1 certificate_controller.go:112] Starting certificate controller "csrapproving"
I1003 07:54:20.261076       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrapproving
I1003 07:54:20.409864       1 controllermanager.go:638] "Started controller" controller="ttl"
I1003 07:54:20.409920       1 ttl_controller.go:124] "Starting TTL controller"
I1003 07:54:20.409929       1 shared_informer.go:311] Waiting for caches to sync for TTL
I1003 07:54:20.561743       1 controllermanager.go:638] "Started controller" controller="tokencleaner"
I1003 07:54:20.561820       1 tokencleaner.go:112] "Starting token cleaner controller"
I1003 07:54:20.561828       1 shared_informer.go:311] Waiting for caches to sync for token_cleaner
I1003 07:54:20.561835       1 shared_informer.go:318] Caches are synced for token_cleaner
E1003 07:54:20.711027       1 core.go:92] "Failed to start service controller" err="WARNING: no cloud provider provided, services of type LoadBalancer will fail"
I1003 07:54:20.711063       1 controllermanager.go:616] "Warning: skipping controller" controller="service"
I1003 07:54:20.860626       1 controllermanager.go:638] "Started controller" controller="endpointslice"
I1003 07:54:20.860715       1 endpointslice_controller.go:252] Starting endpoint slice controller
I1003 07:54:20.860722       1 shared_informer.go:311] Waiting for caches to sync for endpoint_slice
I1003 07:54:20.908852       1 controllermanager.go:638] "Started controller" controller="csrcleaner"
I1003 07:54:20.908913       1 cleaner.go:82] Starting CSR cleaner controller
I1003 07:54:21.060711       1 controllermanager.go:638] "Started controller" controller="persistentvolume-binder"
I1003 07:54:21.060800       1 pv_controller_base.go:323] "Starting persistent volume controller"
I1003 07:54:21.060806       1 shared_informer.go:311] Waiting for caches to sync for persistent volume
I1003 07:54:21.210046       1 controllermanager.go:638] "Started controller" controller="pvc-protection"
I1003 07:54:21.210115       1 pvc_protection_controller.go:102] "Starting PVC protection controller"
I1003 07:54:21.210135       1 shared_informer.go:311] Waiting for caches to sync for PVC protection
I1003 07:54:21.361001       1 controllermanager.go:638] "Started controller" controller="root-ca-cert-publisher"
I1003 07:54:21.361033       1 publisher.go:101] Starting root CA certificate configmap publisher
I1003 07:54:21.361045       1 shared_informer.go:311] Waiting for caches to sync for crt configmap
I1003 07:54:21.510320       1 controllermanager.go:638] "Started controller" controller="ephemeral-volume"
I1003 07:54:21.510383       1 controller.go:169] "Starting ephemeral volume controller"
I1003 07:54:21.510391       1 shared_informer.go:311] Waiting for caches to sync for ephemeral
I1003 07:54:21.763691       1 controllermanager.go:638] "Started controller" controller="namespace"
I1003 07:54:21.763736       1 namespace_controller.go:197] "Starting namespace controller"
I1003 07:54:21.763746       1 shared_informer.go:311] Waiting for caches to sync for namespace
I1003 07:54:21.810067       1 certificate_controller.go:112] Starting certificate controller "csrsigning-kubelet-serving"
I1003 07:54:21.810101       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-kubelet-serving
I1003 07:54:21.810118       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I1003 07:54:21.810606       1 certificate_controller.go:112] Starting certificate controller "csrsigning-kubelet-client"
I1003 07:54:21.810651       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-kubelet-client
I1003 07:54:21.810685       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I1003 07:54:21.811057       1 certificate_controller.go:112] Starting certificate controller "csrsigning-kube-apiserver-client"
I1003 07:54:21.811086       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-kube-apiserver-client
I1003 07:54:21.811121       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I1003 07:54:21.811545       1 controllermanager.go:638] "Started controller" controller="csrsigning"
I1003 07:54:21.811575       1 dynamic_serving_content.go:132] "Starting controller" name="csr-controller::/etc/kubernetes/pki/ca.crt::/etc/kubernetes/pki/ca.key"
I1003 07:54:21.811561       1 certificate_controller.go:112] Starting certificate controller "csrsigning-legacy-unknown"
I1003 07:54:21.811603       1 shared_informer.go:311] Waiting for caches to sync for certificate-csrsigning-legacy-unknown
I1003 07:54:21.960242       1 controllermanager.go:638] "Started controller" controller="pv-protection"
I1003 07:54:21.960320       1 pv_protection_controller.go:78] "Starting PV protection controller"
I1003 07:54:21.960336       1 shared_informer.go:311] Waiting for caches to sync for PV protection
I1003 07:54:22.259022       1 controllermanager.go:638] "Started controller" controller="horizontalpodautoscaling"
I1003 07:54:22.259072       1 horizontal.go:200] "Starting HPA controller"
I1003 07:54:22.259079       1 shared_informer.go:311] Waiting for caches to sync for HPA
I1003 07:54:22.410255       1 controllermanager.go:638] "Started controller" controller="attachdetach"
I1003 07:54:22.410649       1 attach_detach_controller.go:343] "Starting attach detach controller"
I1003 07:54:22.410692       1 shared_informer.go:311] Waiting for caches to sync for attach detach
I1003 07:54:22.412878       1 shared_informer.go:311] Waiting for caches to sync for resource quota
I1003 07:54:22.415328       1 actual_state_of_world.go:547] "Failed to update statusUpdateNeeded field in actual state of world" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"lab-cluster-control-plane\" does not exist"
I1003 07:54:22.415940       1 shared_informer.go:318] Caches are synced for node
I1003 07:54:22.416016       1 range_allocator.go:174] "Sending events to api server"
I1003 07:54:22.416106       1 range_allocator.go:178] "Starting range CIDR allocator"
I1003 07:54:22.416114       1 shared_informer.go:311] Waiting for caches to sync for cidrallocator
I1003 07:54:22.416122       1 shared_informer.go:318] Caches are synced for cidrallocator
I1003 07:54:22.421365       1 range_allocator.go:380] "Set node PodCIDR" node="lab-cluster-control-plane" podCIDRs=[10.244.0.0/24]
I1003 07:54:22.421568       1 shared_informer.go:311] Waiting for caches to sync for garbage collector
I1003 07:54:22.421772       1 shared_informer.go:318] Caches are synced for ClusterRoleAggregator
I1003 07:54:22.426864       1 shared_informer.go:318] Caches are synced for ReplicationController
I1003 07:54:22.433110       1 shared_informer.go:318] Caches are synced for daemon sets
I1003 07:54:22.437459       1 shared_informer.go:318] Caches are synced for deployment
I1003 07:54:22.443833       1 shared_informer.go:318] Caches are synced for ReplicaSet
I1003 07:54:22.451146       1 shared_informer.go:318] Caches are synced for disruption
I1003 07:54:22.458229       1 shared_informer.go:318] Caches are synced for bootstrap_signer
I1003 07:54:22.459453       1 shared_informer.go:318] Caches are synced for HPA
I1003 07:54:22.460770       1 shared_informer.go:318] Caches are synced for endpoint_slice
I1003 07:54:22.460809       1 shared_informer.go:318] Caches are synced for PV protection
I1003 07:54:22.462014       1 shared_informer.go:318] Caches are synced for certificate-csrapproving
I1003 07:54:22.462054       1 shared_informer.go:318] Caches are synced for crt configmap
I1003 07:54:22.463179       1 shared_informer.go:318] Caches are synced for GC
I1003 07:54:22.481939       1 shared_informer.go:318] Caches are synced for cronjob
I1003 07:54:22.488321       1 shared_informer.go:318] Caches are synced for endpoint
I1003 07:54:22.493657       1 shared_informer.go:318] Caches are synced for endpoint_slice_mirroring
I1003 07:54:22.504204       1 shared_informer.go:318] Caches are synced for taint
I1003 07:54:22.504291       1 taint_manager.go:206] "Starting NoExecuteTaintManager"
I1003 07:54:22.504291       1 node_lifecycle_controller.go:1223] "Initializing eviction metric for zone" zone=""
I1003 07:54:22.504371       1 taint_manager.go:211] "Sending events to api server"
I1003 07:54:22.504377       1 node_lifecycle_controller.go:875] "Missing timestamp for Node. Assuming now as a timestamp" node="lab-cluster-control-plane"
I1003 07:54:22.504570       1 node_lifecycle_controller.go:1027] "Controller detected that all Nodes are not-Ready. Entering master disruption mode"
I1003 07:54:22.504589       1 event.go:307] "Event occurred" object="lab-cluster-control-plane" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node lab-cluster-control-plane event: Registered Node lab-cluster-control-plane in Controller"
I1003 07:54:22.510932       1 shared_informer.go:318] Caches are synced for job
I1003 07:54:22.510969       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kubelet-serving
I1003 07:54:22.510990       1 shared_informer.go:318] Caches are synced for TTL
I1003 07:54:22.511086       1 shared_informer.go:318] Caches are synced for TTL after finished
I1003 07:54:22.511117       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kubelet-client
I1003 07:54:22.511121       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-kube-apiserver-client
I1003 07:54:22.511982       1 shared_informer.go:318] Caches are synced for certificate-csrsigning-legacy-unknown
I1003 07:54:22.560960       1 shared_informer.go:318] Caches are synced for persistent volume
I1003 07:54:22.575274       1 shared_informer.go:318] Caches are synced for service account
I1003 07:54:22.598431       1 shared_informer.go:318] Caches are synced for stateful set
I1003 07:54:22.610669       1 shared_informer.go:318] Caches are synced for PVC protection
I1003 07:54:22.610828       1 shared_informer.go:318] Caches are synced for expand
I1003 07:54:22.610856       1 shared_informer.go:318] Caches are synced for ephemeral
I1003 07:54:22.610910       1 shared_informer.go:318] Caches are synced for attach detach
I1003 07:54:22.663319       1 shared_informer.go:318] Caches are synced for resource quota
I1003 07:54:22.664238       1 shared_informer.go:318] Caches are synced for namespace
I1003 07:54:22.713846       1 shared_informer.go:318] Caches are synced for resource quota
I1003 07:54:22.823664       1 event.go:307] "Event occurred" object="kube-system/kindnet" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kindnet-2tkf7"
I1003 07:54:22.824304       1 event.go:307] "Event occurred" object="kube-system/kube-proxy" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-66wfq"
I1003 07:54:22.917219       1 event.go:307] "Event occurred" object="kube-system/coredns" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set coredns-5d78c9869d to 2"
I1003 07:54:22.918996       1 event.go:307] "Event occurred" object="local-path-storage/local-path-provisioner" fieldPath="" kind="Deployment" apiVersion="apps/v1" type="Normal" reason="ScalingReplicaSet" message="Scaled up replica set local-path-provisioner-6bc4bddd6b to 1"
I1003 07:54:23.022033       1 shared_informer.go:318] Caches are synced for garbage collector
I1003 07:54:23.059507       1 shared_informer.go:318] Caches are synced for garbage collector
I1003 07:54:23.059538       1 garbagecollector.go:166] "All resource monitors have synced. Proceeding to collect garbage"
I1003 07:54:23.414438       1 event.go:307] "Event occurred" object="kube-system/coredns-5d78c9869d" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-5d78c9869d-nt47d"
I1003 07:54:23.416533       1 event.go:307] "Event occurred" object="local-path-storage/local-path-provisioner-6bc4bddd6b" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: local-path-provisioner-6bc4bddd6b-p28v2"
I1003 07:54:23.419346       1 event.go:307] "Event occurred" object="kube-system/coredns-5d78c9869d" fieldPath="" kind="ReplicaSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: coredns-5d78c9869d-f6qvq"
I1003 07:54:25.273302       1 actual_state_of_world.go:547] "Failed to update statusUpdateNeeded field in actual state of world" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"lab-cluster-worker\" does not exist"
I1003 07:54:25.284995       1 event.go:307] "Event occurred" object="kube-system/kindnet" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kindnet-pb8dl"
I1003 07:54:25.285009       1 range_allocator.go:380] "Set node PodCIDR" node="lab-cluster-worker" podCIDRs=[10.244.1.0/24]
I1003 07:54:25.285145       1 event.go:307] "Event occurred" object="kube-system/kube-proxy" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-lc44j"
I1003 07:54:27.505315       1 event.go:307] "Event occurred" object="lab-cluster-worker" fieldPath="" kind="Node" apiVersion="v1" type="Normal" reason="RegisteredNode" message="Node lab-cluster-worker event: Registered Node lab-cluster-worker in Controller"
I1003 07:54:27.505362       1 node_lifecycle_controller.go:875] "Missing timestamp for Node. Assuming now as a timestamp" node="lab-cluster-worker"
I1003 07:54:27.505430       1 node_lifecycle_controller.go:1046] "Controller detected that some Nodes are Ready. Exiting master disruption mode"
I1003 07:54:27.553227       1 actual_state_of_world.go:547] "Failed to update statusUpdateNeeded field in actual state of world" err="Failed to set statusUpdateNeeded to needed true, because nodeName=\"lab-cluster-worker2\" does not exist"
I1003 07:54:27.558072       1 range_allocator.go:380] "Set node PodCIDR" node="lab-cluster-worker2" podCIDRs=[10.244.2.0/24]
I1003 07:54:27.560954       1 event.go:307] "Event occurred" object="kube-system/kube-proxy" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kube-proxy-spw78"
I1003 07:54:27.561003       1 event.go:307] "Event occurred" object="kube-system/kindnet" fieldPath="" kind="DaemonSet" apiVersion="apps/v1" type="Normal" reason="SuccessfulCreate" message="Created pod: kindnet-24bgg"
W1003 07:54:28.863868       1 topologycache.go:232] Can't get CPU or zone information for lab-cluster-worker node
==== END logs for container kube-controller-manager of pod kube-system/kube-controller-manager-lab-cluster-control-plane ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-66wfq ====
I1003 07:54:24.526109       1 node.go:141] Successfully retrieved node IP: 172.26.0.5
I1003 07:54:24.526191       1 server_others.go:110] "Detected node IP" address="172.26.0.5"
I1003 07:54:24.547575       1 server_others.go:192] "Using iptables Proxier"
I1003 07:54:24.547614       1 server_others.go:199] "kube-proxy running in dual-stack mode" ipFamily=IPv4
I1003 07:54:24.547620       1 server_others.go:200] "Creating dualStackProxier for iptables"
I1003 07:54:24.547636       1 server_others.go:484] "Detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, defaulting to no-op detect-local for IPv6"
I1003 07:54:24.547660       1 proxier.go:253] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I1003 07:54:24.548413       1 server.go:658] "Version info" version="v1.27.3"
I1003 07:54:24.549135       1 server.go:660] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I1003 07:54:24.550339       1 conntrack.go:100] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_close_wait" value=3600
I1003 07:54:24.550518       1 config.go:97] "Starting endpoint slice config controller"
I1003 07:54:24.550554       1 shared_informer.go:311] Waiting for caches to sync for endpoint slice config
I1003 07:54:24.550645       1 config.go:188] "Starting service config controller"
I1003 07:54:24.550674       1 shared_informer.go:311] Waiting for caches to sync for service config
I1003 07:54:24.550709       1 config.go:315] "Starting node config controller"
I1003 07:54:24.550716       1 shared_informer.go:311] Waiting for caches to sync for node config
I1003 07:54:24.651680       1 shared_informer.go:318] Caches are synced for node config
I1003 07:54:24.651700       1 shared_informer.go:318] Caches are synced for endpoint slice config
I1003 07:54:24.651717       1 shared_informer.go:318] Caches are synced for service config
==== END logs for container kube-proxy of pod kube-system/kube-proxy-66wfq ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-lc44j ====
I1003 07:54:27.493975       1 node.go:141] Successfully retrieved node IP: 172.26.0.6
I1003 07:54:27.494118       1 server_others.go:110] "Detected node IP" address="172.26.0.6"
I1003 07:54:27.519335       1 server_others.go:192] "Using iptables Proxier"
I1003 07:54:27.519386       1 server_others.go:199] "kube-proxy running in dual-stack mode" ipFamily=IPv4
I1003 07:54:27.519393       1 server_others.go:200] "Creating dualStackProxier for iptables"
I1003 07:54:27.519403       1 server_others.go:484] "Detect-local-mode set to ClusterCIDR, but no IPv6 cluster CIDR defined, defaulting to no-op detect-local for IPv6"
I1003 07:54:27.519437       1 proxier.go:253] "Setting route_localnet=1 to allow node-ports on localhost; to change this either disable iptables.localhostNodePorts (--iptables-localhost-nodeports) or set nodePortAddresses (--nodeport-addresses) to filter loopback addresses"
I1003 07:54:27.520110       1 server.go:658] "Version info" version="v1.27.3"
I1003 07:54:27.520146       1 server.go:660] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I1003 07:54:27.520574       1 conntrack.go:100] "Set sysctl" entry="net/netfilter/nf_conntrack_tcp_timeout_close_wait" value=3600
I1003 07:54:27.520764       1 config.go:97] "Starting endpoint slice config controller"
I1003 07:54:27.520799       1 shared_informer.go:311] Waiting for caches to sync for endpoint slice config
I1003 07:54:27.520868       1 config.go:315] "Starting node config controller"
I1003 07:54:27.520881       1 shared_informer.go:311] Waiting for caches to sync for node config
I1003 07:54:27.520909       1 config.go:188] "Starting service config controller"
I1003 07:54:27.520955       1 shared_informer.go:311] Waiting for caches to sync for service config
I1003 07:54:27.621923       1 shared_informer.go:318] Caches are synced for endpoint slice config
I1003 07:54:27.621980       1 shared_informer.go:318] Caches are synced for node config
I1003 07:54:27.622031       1 shared_informer.go:318] Caches are synced for service config
==== END logs for container kube-proxy of pod kube-system/kube-proxy-lc44j ====
==== START logs for container kube-proxy of pod kube-system/kube-proxy-spw78 ====
Request log error: the server rejected our request for an unknown reason (get pods kube-proxy-spw78)
==== END logs for container kube-proxy of pod kube-system/kube-proxy-spw78 ====
==== START logs for container kube-scheduler of pod kube-system/kube-scheduler-lab-cluster-control-plane ====
I1003 07:54:04.177781       1 serving.go:348] Generated self-signed cert in-memory
W1003 07:54:05.768656       1 requestheader_controller.go:193] Unable to get configmap/extension-apiserver-authentication in kube-system.  Usually fixed by 'kubectl create rolebinding -n kube-system ROLEBINDING_NAME --role=extension-apiserver-authentication-reader --serviceaccount=YOUR_NS:YOUR_SA'
W1003 07:54:05.768684       1 authentication.go:368] Error looking up in-cluster authentication configuration: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot get resource "configmaps" in API group "" in the namespace "kube-system"
W1003 07:54:05.768695       1 authentication.go:369] Continuing without authentication configuration. This may treat all requests as anonymous.
W1003 07:54:05.768705       1 authentication.go:370] To require authentication configuration lookup to succeed, set --authentication-tolerate-lookup-failure=false
I1003 07:54:05.795973       1 server.go:154] "Starting Kubernetes Scheduler" version="v1.27.3"
I1003 07:54:05.796010       1 server.go:156] "Golang settings" GOGC="" GOMAXPROCS="" GOTRACEBACK=""
I1003 07:54:05.796836       1 configmap_cafile_content.go:202] "Starting controller" name="client-ca::kube-system::extension-apiserver-authentication::client-ca-file"
I1003 07:54:05.796892       1 shared_informer.go:311] Waiting for caches to sync for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I1003 07:54:05.797160       1 secure_serving.go:210] Serving securely on 127.0.0.1:10259
I1003 07:54:05.797203       1 tlsconfig.go:240] "Starting DynamicServingCertificateController"
W1003 07:54:05.798267       1 reflector.go:533] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E1003 07:54:05.798327       1 reflector.go:148] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
W1003 07:54:05.798345       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
E1003 07:54:05.798368       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PodDisruptionBudget: failed to list *v1.PodDisruptionBudget: poddisruptionbudgets.policy is forbidden: User "system:kube-scheduler" cannot list resource "poddisruptionbudgets" in API group "policy" at the cluster scope
W1003 07:54:05.798367       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
E1003 07:54:05.798934       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Node: failed to list *v1.Node: nodes is forbidden: User "system:kube-scheduler" cannot list resource "nodes" in API group "" at the cluster scope
W1003 07:54:05.799041       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E1003 07:54:05.799062       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W1003 07:54:05.799124       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
E1003 07:54:05.799168       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSINode: failed to list *v1.CSINode: csinodes.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csinodes" in API group "storage.k8s.io" at the cluster scope
W1003 07:54:05.799192       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E1003 07:54:05.799219       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W1003 07:54:05.799280       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E1003 07:54:05.799319       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W1003 07:54:05.799297       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E1003 07:54:05.799342       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W1003 07:54:05.799405       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W1003 07:54:05.799359       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
E1003 07:54:05.799455       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIStorageCapacity: failed to list *v1.CSIStorageCapacity: csistoragecapacities.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csistoragecapacities" in API group "storage.k8s.io" at the cluster scope
W1003 07:54:05.799444       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E1003 07:54:05.799583       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W1003 07:54:05.799518       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E1003 07:54:05.799623       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W1003 07:54:05.799519       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E1003 07:54:05.799647       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.CSIDriver: failed to list *v1.CSIDriver: csidrivers.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "csidrivers" in API group "storage.k8s.io" at the cluster scope
E1003 07:54:05.799695       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolume: failed to list *v1.PersistentVolume: persistentvolumes is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumes" in API group "" at the cluster scope
W1003 07:54:05.800017       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
E1003 07:54:05.800135       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.PersistentVolumeClaim: failed to list *v1.PersistentVolumeClaim: persistentvolumeclaims is forbidden: User "system:kube-scheduler" cannot list resource "persistentvolumeclaims" in API group "" at the cluster scope
W1003 07:54:05.800309       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E1003 07:54:05.800319       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W1003 07:54:06.651390       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
E1003 07:54:06.651428       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Namespace: failed to list *v1.Namespace: namespaces is forbidden: User "system:kube-scheduler" cannot list resource "namespaces" in API group "" at the cluster scope
W1003 07:54:06.674652       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
E1003 07:54:06.674685       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Service: failed to list *v1.Service: services is forbidden: User "system:kube-scheduler" cannot list resource "services" in API group "" at the cluster scope
W1003 07:54:06.770488       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
E1003 07:54:06.770535       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicaSet: failed to list *v1.ReplicaSet: replicasets.apps is forbidden: User "system:kube-scheduler" cannot list resource "replicasets" in API group "apps" at the cluster scope
W1003 07:54:06.779528       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
E1003 07:54:06.779577       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.Pod: failed to list *v1.Pod: pods is forbidden: User "system:kube-scheduler" cannot list resource "pods" in API group "" at the cluster scope
W1003 07:54:06.926166       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
E1003 07:54:06.926211       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.ReplicationController: failed to list *v1.ReplicationController: replicationcontrollers is forbidden: User "system:kube-scheduler" cannot list resource "replicationcontrollers" in API group "" at the cluster scope
W1003 07:54:06.936016       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
E1003 07:54:06.936048       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StatefulSet: failed to list *v1.StatefulSet: statefulsets.apps is forbidden: User "system:kube-scheduler" cannot list resource "statefulsets" in API group "apps" at the cluster scope
W1003 07:54:06.968292       1 reflector.go:533] vendor/k8s.io/client-go/informers/factory.go:150: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
E1003 07:54:06.968334       1 reflector.go:148] vendor/k8s.io/client-go/informers/factory.go:150: Failed to watch *v1.StorageClass: failed to list *v1.StorageClass: storageclasses.storage.k8s.io is forbidden: User "system:kube-scheduler" cannot list resource "storageclasses" in API group "storage.k8s.io" at the cluster scope
W1003 07:54:07.166873       1 reflector.go:533] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
E1003 07:54:07.166915       1 reflector.go:148] pkg/server/dynamiccertificates/configmap_cafile_content.go:206: Failed to watch *v1.ConfigMap: failed to list *v1.ConfigMap: configmaps "extension-apiserver-authentication" is forbidden: User "system:kube-scheduler" cannot list resource "configmaps" in API group "" in the namespace "kube-system"
I1003 07:54:09.797940       1 shared_informer.go:318] Caches are synced for client-ca::kube-system::extension-apiserver-authentication::client-ca-file
I1003 07:54:09.899909       1 leaderelection.go:245] attempting to acquire leader lease kube-system/kube-scheduler...
I1003 07:54:09.914495       1 leaderelection.go:255] successfully acquired lease kube-system/kube-scheduler
==== END logs for container kube-scheduler of pod kube-system/kube-scheduler-lab-cluster-control-plane ====
{
    "kind": "EventList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "517"
    },
    "items": [
        {
            "metadata": {
                "name": "lab-cluster-control-plane.186aebf6a7e94a6d",
                "namespace": "default",
                "uid": "64a9cc55-3379-493d-9d26-647f866a25f8",
                "resourceVersion": "230",
                "creationTimestamp": "2025-10-03T07:54:09Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-control-plane",
                "uid": "lab-cluster-control-plane"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-03T07:54:09Z",
            "lastTimestamp": "2025-10-03T07:54:09Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "lab-cluster-control-plane.186aebf6ab570b59",
                "namespace": "default",
                "uid": "68299a80-ad8c-4566-98bf-9944b3dc35a2",
                "resourceVersion": "240",
                "creationTimestamp": "2025-10-03T07:54:09Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-control-plane",
                "uid": "lab-cluster-control-plane"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-03T07:54:09Z",
            "lastTimestamp": "2025-10-03T07:54:09Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "lab-cluster-control-plane.186aebf6ae26aa55",
                "namespace": "default",
                "uid": "57c3c246-5a94-41fc-b21a-e1578077aedf",
                "resourceVersion": "242",
                "creationTimestamp": "2025-10-03T07:54:09Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-control-plane",
                "uid": "lab-cluster-control-plane"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node lab-cluster-control-plane status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-03T07:54:09Z",
            "lastTimestamp": "2025-10-03T07:54:09Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "lab-cluster-control-plane.186aebf6ae271daf",
                "namespace": "default",
                "uid": "49280b2b-bae7-46cb-ab8b-d631c4f83cb6",
                "resourceVersion": "243",
                "creationTimestamp": "2025-10-03T07:54:09Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-control-plane",
                "uid": "lab-cluster-control-plane"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node lab-cluster-control-plane status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-03T07:54:09Z",
            "lastTimestamp": "2025-10-03T07:54:09Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "lab-cluster-control-plane.186aebf6ae272b5b",
                "namespace": "default",
                "uid": "9879fd45-7967-4d49-9e6d-0a19b6b3be93",
                "resourceVersion": "244",
                "creationTimestamp": "2025-10-03T07:54:09Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-control-plane",
                "uid": "lab-cluster-control-plane"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node lab-cluster-control-plane status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-03T07:54:09Z",
            "lastTimestamp": "2025-10-03T07:54:09Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "lab-cluster-control-plane.186aebf9c9a8e005",
                "namespace": "default",
                "uid": "7d53f405-a7e7-48a7-9a7b-2e2a890d71c4",
                "resourceVersion": "318",
                "creationTimestamp": "2025-10-03T07:54:22Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-control-plane",
                "uid": "13198dd4-40a3-4433-ab80-7fc2fabcf1d6",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node lab-cluster-control-plane event: Registered Node lab-cluster-control-plane in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2025-10-03T07:54:22Z",
            "lastTimestamp": "2025-10-03T07:54:22Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "lab-cluster-control-plane.186aebfa439faf85",
                "namespace": "default",
                "uid": "f3c54397-383c-4de2-80a0-31f86ddca0e5",
                "resourceVersion": "391",
                "creationTimestamp": "2025-10-03T07:54:24Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-control-plane",
                "uid": "lab-cluster-control-plane"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2025-10-03T07:54:24.550489Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-lab-cluster-control-plane"
        },
        {
            "metadata": {
                "name": "lab-cluster-control-plane.186aebfa8d96fba2",
                "namespace": "default",
                "uid": "59e09cba-6d04-43fc-853c-70d889bb548d",
                "resourceVersion": "420",
                "creationTimestamp": "2025-10-03T07:54:25Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-control-plane",
                "uid": "lab-cluster-control-plane"
            },
            "reason": "NodeReady",
            "message": "Node lab-cluster-control-plane status is now: NodeReady",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-control-plane"
            },
            "firstTimestamp": "2025-10-03T07:54:25Z",
            "lastTimestamp": "2025-10-03T07:54:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "lab-cluster-worker.186aebfa684a9f1d",
                "namespace": "default",
                "uid": "7b5191e9-db4b-4b9a-9b1e-e139f7b34718",
                "resourceVersion": "396",
                "creationTimestamp": "2025-10-03T07:54:25Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker",
                "uid": "lab-cluster-worker"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker"
            },
            "firstTimestamp": "2025-10-03T07:54:25Z",
            "lastTimestamp": "2025-10-03T07:54:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "lab-cluster-worker.186aebfa6961318b",
                "namespace": "default",
                "uid": "e2879e1d-7079-4e5d-8ccf-ed929ca6d10f",
                "resourceVersion": "401",
                "creationTimestamp": "2025-10-03T07:54:25Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker",
                "uid": "lab-cluster-worker"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node lab-cluster-worker status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker"
            },
            "firstTimestamp": "2025-10-03T07:54:25Z",
            "lastTimestamp": "2025-10-03T07:54:25Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "lab-cluster-worker.186aebfa69614077",
                "namespace": "default",
                "uid": "bb950e9d-d464-4a0c-ad9c-537f40f9d2f6",
                "resourceVersion": "407",
                "creationTimestamp": "2025-10-03T07:54:25Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker",
                "uid": "lab-cluster-worker"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node lab-cluster-worker status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker"
            },
            "firstTimestamp": "2025-10-03T07:54:25Z",
            "lastTimestamp": "2025-10-03T07:54:25Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "lab-cluster-worker.186aebfa69615175",
                "namespace": "default",
                "uid": "34c34e67-983f-4a2e-9621-ecc135f7ceb5",
                "resourceVersion": "415",
                "creationTimestamp": "2025-10-03T07:54:25Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker",
                "uid": "lab-cluster-worker"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node lab-cluster-worker status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker"
            },
            "firstTimestamp": "2025-10-03T07:54:25Z",
            "lastTimestamp": "2025-10-03T07:54:25Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "lab-cluster-worker.186aebfa6eb14337",
                "namespace": "default",
                "uid": "e8b9ec54-4598-4766-9e88-f86ec1763685",
                "resourceVersion": "417",
                "creationTimestamp": "2025-10-03T07:54:25Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker",
                "uid": "lab-cluster-worker"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker"
            },
            "firstTimestamp": "2025-10-03T07:54:25Z",
            "lastTimestamp": "2025-10-03T07:54:25Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "lab-cluster-worker.186aebfaf3bce60b",
                "namespace": "default",
                "uid": "466455a0-f6aa-411a-85fb-f8f8c5f43eee",
                "resourceVersion": "471",
                "creationTimestamp": "2025-10-03T07:54:27Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker",
                "uid": "9c6c5b37-3f6b-4220-a2d6-3f3b7abde6df",
                "apiVersion": "v1"
            },
            "reason": "RegisteredNode",
            "message": "Node lab-cluster-worker event: Registered Node lab-cluster-worker in Controller",
            "source": {
                "component": "node-controller"
            },
            "firstTimestamp": "2025-10-03T07:54:27Z",
            "lastTimestamp": "2025-10-03T07:54:27Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "lab-cluster-worker.186aebfaf4a9f6f5",
                "namespace": "default",
                "uid": "a749b5d0-a69f-41c2-8eef-c72a7821b3a2",
                "resourceVersion": "472",
                "creationTimestamp": "2025-10-03T07:54:27Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker",
                "uid": "lab-cluster-worker"
            },
            "reason": "Starting",
            "source": {},
            "firstTimestamp": null,
            "lastTimestamp": null,
            "type": "Normal",
            "eventTime": "2025-10-03T07:54:27.520730Z",
            "action": "StartKubeProxy",
            "reportingComponent": "kube-proxy",
            "reportingInstance": "kube-proxy-lab-cluster-worker"
        },
        {
            "metadata": {
                "name": "lab-cluster-worker.186aebfb4456f2e9",
                "namespace": "default",
                "uid": "25906571-a908-4e65-8fe8-283fb5a210d2",
                "resourceVersion": "500",
                "creationTimestamp": "2025-10-03T07:54:28Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker",
                "uid": "lab-cluster-worker"
            },
            "reason": "NodeReady",
            "message": "Node lab-cluster-worker status is now: NodeReady",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker"
            },
            "firstTimestamp": "2025-10-03T07:54:28Z",
            "lastTimestamp": "2025-10-03T07:54:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "lab-cluster-worker2.186aebfaefd0bb27",
                "namespace": "default",
                "uid": "715fbb75-36ed-4498-8ebf-f5efd0f853ff",
                "resourceVersion": "467",
                "creationTimestamp": "2025-10-03T07:54:27Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker2",
                "uid": "lab-cluster-worker2"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker2"
            },
            "firstTimestamp": "2025-10-03T07:54:27Z",
            "lastTimestamp": "2025-10-03T07:54:27Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "lab-cluster-worker2.186aebfaf1764b7b",
                "namespace": "default",
                "uid": "3a20b582-8295-4b0e-8e93-11800af8adc4",
                "resourceVersion": "474",
                "creationTimestamp": "2025-10-03T07:54:27Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker2",
                "uid": "lab-cluster-worker2"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node lab-cluster-worker2 status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker2"
            },
            "firstTimestamp": "2025-10-03T07:54:27Z",
            "lastTimestamp": "2025-10-03T07:54:27Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "lab-cluster-worker2.186aebfaf1765f49",
                "namespace": "default",
                "uid": "2d5472fd-8120-48e4-b1f3-070192945ce3",
                "resourceVersion": "477",
                "creationTimestamp": "2025-10-03T07:54:27Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker2",
                "uid": "lab-cluster-worker2"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node lab-cluster-worker2 status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker2"
            },
            "firstTimestamp": "2025-10-03T07:54:27Z",
            "lastTimestamp": "2025-10-03T07:54:27Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "lab-cluster-worker2.186aebfaf1766d13",
                "namespace": "default",
                "uid": "01045899-1f35-4164-9214-afa6757ccedc",
                "resourceVersion": "485",
                "creationTimestamp": "2025-10-03T07:54:27Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker2",
                "uid": "lab-cluster-worker2"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node lab-cluster-worker2 status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker2"
            },
            "firstTimestamp": "2025-10-03T07:54:27Z",
            "lastTimestamp": "2025-10-03T07:54:27Z",
            "count": 2,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "lab-cluster-worker2.186aebfb48cd9a5a",
                "namespace": "default",
                "uid": "4de8cc89-099a-40dc-b1a9-5aa7dbd01a20",
                "resourceVersion": "503",
                "creationTimestamp": "2025-10-03T07:54:28Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker2",
                "uid": "lab-cluster-worker2"
            },
            "reason": "Starting",
            "message": "Starting kubelet.",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker2"
            },
            "firstTimestamp": "2025-10-03T07:54:28Z",
            "lastTimestamp": "2025-10-03T07:54:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "lab-cluster-worker2.186aebfb4cbe53c8",
                "namespace": "default",
                "uid": "48c803cd-3ac6-4f68-9112-f9d823b7a60a",
                "resourceVersion": "506",
                "creationTimestamp": "2025-10-03T07:54:29Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker2",
                "uid": "lab-cluster-worker2"
            },
            "reason": "NodeAllocatableEnforced",
            "message": "Updated Node Allocatable limit across pods",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker2"
            },
            "firstTimestamp": "2025-10-03T07:54:28Z",
            "lastTimestamp": "2025-10-03T07:54:28Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "lab-cluster-worker2.186aebfb4ef44361",
                "namespace": "default",
                "uid": "84fbb703-82e7-4e7d-9064-6024db375b56",
                "resourceVersion": "507",
                "creationTimestamp": "2025-10-03T07:54:29Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker2",
                "uid": "lab-cluster-worker2"
            },
            "reason": "NodeHasSufficientMemory",
            "message": "Node lab-cluster-worker2 status is now: NodeHasSufficientMemory",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker2"
            },
            "firstTimestamp": "2025-10-03T07:54:29Z",
            "lastTimestamp": "2025-10-03T07:54:29Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "lab-cluster-worker2.186aebfb4ef4c719",
                "namespace": "default",
                "uid": "b11af096-298d-44c9-9224-bc2b9b3b08c9",
                "resourceVersion": "508",
                "creationTimestamp": "2025-10-03T07:54:29Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker2",
                "uid": "lab-cluster-worker2"
            },
            "reason": "NodeHasNoDiskPressure",
            "message": "Node lab-cluster-worker2 status is now: NodeHasNoDiskPressure",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker2"
            },
            "firstTimestamp": "2025-10-03T07:54:29Z",
            "lastTimestamp": "2025-10-03T07:54:29Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        },
        {
            "metadata": {
                "name": "lab-cluster-worker2.186aebfb4ef4d605",
                "namespace": "default",
                "uid": "106ed8e8-2914-4e5b-a3ce-e643674d713a",
                "resourceVersion": "509",
                "creationTimestamp": "2025-10-03T07:54:29Z"
            },
            "involvedObject": {
                "kind": "Node",
                "name": "lab-cluster-worker2",
                "uid": "lab-cluster-worker2"
            },
            "reason": "NodeHasSufficientPID",
            "message": "Node lab-cluster-worker2 status is now: NodeHasSufficientPID",
            "source": {
                "component": "kubelet",
                "host": "lab-cluster-worker2"
            },
            "firstTimestamp": "2025-10-03T07:54:29Z",
            "lastTimestamp": "2025-10-03T07:54:29Z",
            "count": 1,
            "type": "Normal",
            "eventTime": null,
            "reportingComponent": "",
            "reportingInstance": ""
        }
    ]
}
{
    "kind": "ReplicationControllerList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "517"
    },
    "items": null
}
{
    "kind": "ServiceList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "517"
    },
    "items": [
        {
            "metadata": {
                "name": "kubernetes",
                "namespace": "default",
                "uid": "36905c14-3c2b-4ff1-9bca-63a202c61153",
                "resourceVersion": "195",
                "creationTimestamp": "2025-10-03T07:54:07Z",
                "labels": {
                    "component": "apiserver",
                    "provider": "kubernetes"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "https",
                        "protocol": "TCP",
                        "port": 443,
                        "targetPort": 6443
                    }
                ],
                "clusterIP": "10.96.0.1",
                "clusterIPs": [
                    "10.96.0.1"
                ],
                "type": "ClusterIP",
                "sessionAffinity": "None",
                "ipFamilies": [
                    "IPv4"
                ],
                "ipFamilyPolicy": "SingleStack",
                "internalTrafficPolicy": "Cluster"
            },
            "status": {
                "loadBalancer": {}
            }
        }
    ]
}
{
    "kind": "DaemonSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "517"
    },
    "items": null
}
{
    "kind": "DeploymentList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "517"
    },
    "items": null
}
{
    "kind": "ReplicaSetList",
    "apiVersion": "apps/v1",
    "metadata": {
        "resourceVersion": "517"
    },
    "items": null
}
{
    "kind": "PodList",
    "apiVersion": "v1",
    "metadata": {
        "resourceVersion": "517"
    },
    "items": null
}
